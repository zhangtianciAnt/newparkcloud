<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_BASF.mapper.BlackListMapper">
    <resultMap id="BaseResultMap" type="com.nt.dao_BASF.BlackList">
        <id column="blacklistid" property="blacklistid" jdbcType="VARCHAR"/>
        <result column="drivername" property="drivername" jdbcType="VARCHAR"/>
        <result column="driveridnumber" property="driveridnumber" jdbcType="VARCHAR"/>
        <result column="violationstime" property="violationstime" jdbcType="TIMESTAMP"/>
        <result column="violationtype" property="violationtype" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="VARCHAR"/>
        <result column="CREATEON" property="createon" jdbcType="TIMESTAMP"/>
        <result column="CREATEBY" property="createby" jdbcType="VARCHAR"/>
        <result column="MODIFYON" property="modifyon" jdbcType="TIMESTAMP"/>
        <result column="MODIFYBY" property="modifyby" jdbcType="VARCHAR"/>
        <result column="Owner" property="owner" jdbcType="VARCHAR"/>
        <result column="TENANTID" property="tenantid" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="getBlackList" resultType="com.nt.dao_BASF.VO.BlackListVo">
        SELECT
            CONCAT(
            a.blacklistid,
            ',',
            b.vehicleinformationid
            ) AS combinationid,
            a.drivername,
            a.driveridnumber,
            a.violationtype,
            a.violationstime,
            b.vehicleinformationid,
            b.vehiclenumber,
            b.linkdepartment,
            b.vehicletype,
            b.supplier,
            b.transtype,
            b.destination,
            b.intime,
            b.outtime
        FROM
            blacklist a,
            vehicleinformation b
        WHERE
            a.driveridnumber = b.driverid
            AND a.driveridnumber <![CDATA[ <> ]]> ''
            AND a.`STATUS` = 0
            AND b.`STATUS` = 0
            AND ( CASE WHEN a.violationtype = 1 THEN b.errorgps IS NOT NULL ELSE b.errorgps IS NULL END )
            AND (
            CASE
            WHEN b.outtime IS NULL THEN
            TO_DAYS(a.violationstime) &gt;= TO_DAYS(b.intime)
            ELSE
            TO_DAYS(a.violationstime) &gt;= TO_DAYS(b.intime)
            AND TO_DAYS(a.violationstime) &lt;= TO_DAYS(b.outtime)
            END
            )
    </select>
</mapper>
