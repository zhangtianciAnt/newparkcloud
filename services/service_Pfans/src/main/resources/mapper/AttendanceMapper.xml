<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_pfans.PFANS2000.mapper.AttendanceMapper">
	<select id="getAttendance" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance" resultType="com.nt.dao_Pfans.PFANS2000.Attendance">
    SELECT
	user_id,
	center_id,
	group_id,
	team_id,
	years,
	months,
        CASE WHEN max(recognitionstate) = 1 AND  min(recognitionstate) =1
        THEN '1'
        WHEN max(recognitionstate) = 1 AND min(IF(IFNULL(recognitionstate,'')='',1,recognitionstate)) = 1
        THEN '1'
        ELSE '0'
        END AS recognitionstate
FROM
	attendance
WHERE status = '0'
     <if test="years != null and years != ''" >
      AND years = #{years,jdbcType=VARCHAR}
     </if>
	<if test="months != null and months != ''" >
	  AND months = #{months,jdbcType=VARCHAR}
	</if>
	<if test="owner != null and owner != ''" >
		AND owner = #{owner,jdbcType=VARCHAR}
	</if>

        <if test="owners != null and owners.size() > 0 ">
            and
            owner in
            <foreach item="item" index="index" collection="owners"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
GROUP BY
	user_id,
	center_id,
	group_id,
	team_id,
	years,
	months
	order by CAST(years as SIGNED) desc ,CAST(months as SIGNED) desc
	</select>
	<select id="selectAttendance" parameterType="com.nt.dao_Pfans.PFANS2000.AbNormal" resultType="com.nt.dao_Pfans.PFANS2000.Attendance">
        select
        ATTENDANCE_ID attendanceid,
        center_id,
        group_id,
        team_id,
        years,
        months,
        user_id,
        dates,
        normal,
        actual,
        shortsickleave,
        longsickleave,
        compassionateleave,
        annualrest,
        daixiu,
        nursingleave,
        welfare,
        absenteeism,
        recognitionstate,
        tshortsickleave,
        tlongsickleave,
        tcompassionateleave,
        tabsenteeism,
        status,
        createon,
        createby,
        owner,
        tenantid
        from attendance
        where attendance.dates >= #{occurrencedate}
        and attendance.dates &lt;= #{finisheddate}
        and attendance.user_id = #{user_id}
        and attendance.recognitionstate = #{recognitionstate}
    </select>
    <select id="selectAttenSumSick" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance" resultType="java.lang.Double">
        select
        sum(CONVERT(IFNULL(tshortsickleave,'0'),DECIMAL(6,2)) + CONVERT(IFNULL(shortsickleave,'0'),DECIMAL(6,2)))
        from attendance
        where attendance.dates >= DATE_FORMAT(DATE_SUB(#{dates},INTERVAL 1 YEAR),'%Y-%m-%d')
        and attendance.dates &lt;= #{dates}
        and attendance.user_id = #{user_id}
    </select>
    <update id="updStatus" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance">
        update attendance set RECOGNITIONSTATE = '1'
        where USER_ID = #{user_id}
        and MONTHS = #{months}
        and YEARS = #{years}
        and RECOGNITIONSTATE = '0'
    </update>
    <update id="updStatus1" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance">
        update attendance set RECOGNITIONSTATE = '0'
        where USER_ID = #{user_id}
        and MONTHS = #{months}
        and YEARS = #{years}
        and RECOGNITIONSTATE = '1'
    </update>
    <update id="updStatusre">
        update attendance set RECOGNITIONSTATE = '1',
        MODIFYBY = #{user_id},
        MODIFYON = NOW()
        <if test="ids != null and ids.size() > 0">
            where ATTENDANCE_ID in
            <foreach item="item" index="index" collection="ids"
                     open="(" separator="," close=")">
                #{item.attendanceid}
            </foreach>
        </if>
    </update>
</mapper>
