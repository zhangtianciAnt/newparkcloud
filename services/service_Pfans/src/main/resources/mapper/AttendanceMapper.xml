<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_pfans.PFANS2000.mapper.AttendanceMapper">
	<select id="getAttendance" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance" resultType="com.nt.dao_Pfans.PFANS2000.Attendance">
    SELECT
	user_id,
	center_id,
	group_id,
	team_id,
	years,
	months,
        CASE WHEN max(recognitionstate) = 1 AND  min(recognitionstate) =1
        THEN '1'
        WHEN max(recognitionstate) = 1 AND min(IF(IFNULL(recognitionstate,'')='',1,recognitionstate)) = 1
        THEN '1'
        ELSE '0'
        END AS recognitionstate
FROM
	attendance
WHERE status = '0'
     <if test="years != null and years != ''" >
      AND years = #{years,jdbcType=VARCHAR}
     </if>
	<if test="months != null and months != ''" >
	  AND months = #{months,jdbcType=VARCHAR}
	</if>
	<if test="owner != null and owner != ''" >
		AND owner = #{owner,jdbcType=VARCHAR}
	</if>

        <if test="owners != null and owners.size() > 0 ">
            and
            owner in
            <foreach item="item" index="index" collection="owners"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
GROUP BY
	user_id,
	center_id,
	group_id,
	team_id,
	years,
	months
	order by CAST(years as SIGNED) desc ,CAST(months as SIGNED) desc
	</select>
	<select id="selectAttendance" parameterType="com.nt.dao_Pfans.PFANS2000.AbNormal" resultType="com.nt.dao_Pfans.PFANS2000.Attendance">
        select
        ATTENDANCE_ID attendanceid,
        center_id,
        group_id,
        team_id,
        years,
        months,
        user_id,
        dates,
        normal,
        actual,
        shortsickleave,
        longsickleave,
        compassionateleave,
        annualrest,
        daixiu,
        parenting,
        parentalcare,
        nursingleave,
        welfare,
        absenteeism,
        recognitionstate,
        tshortsickleave,
        tlongsickleave,
        tcompassionateleave,
        tabsenteeism,
        status,
        createon,
        createby,
        owner,
        tenantid
        from attendance
        where attendance.dates >= #{occurrencedate}
        and attendance.dates &lt;= #{finisheddate}
        and attendance.user_id = #{user_id}
        and attendance.recognitionstate = #{recognitionstate}
    </select>
    <select id="selectAttenSumSick" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance" resultType="java.lang.Double">
        select
        sum(CONVERT(IFNULL(tshortsickleave,'0'),DECIMAL(6,2)) + CONVERT(IFNULL(shortsickleave,'0'),DECIMAL(6,2)))
        from attendance
        where attendance.dates >= DATE_FORMAT(DATE_SUB(#{dates},INTERVAL 1 YEAR),'%Y-%m-%d')
        and attendance.dates &lt;= #{dates}
        and attendance.user_id = #{user_id}
    </select>
    <update id="updStatus" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance">
        update attendance set RECOGNITIONSTATE = '1'
        where USER_ID = #{user_id}
        and MONTHS = #{months}
        and YEARS = #{years}
        and RECOGNITIONSTATE = '0'
    </update>
    <update id="updStatus1" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance">
        update attendance set RECOGNITIONSTATE = '0'
        where USER_ID = #{user_id}
        and MONTHS = #{months}
        and YEARS = #{years}
        and RECOGNITIONSTATE = '1'
    </update>
    <update id="updStatusre">
        update attendance set RECOGNITIONSTATE = '1',
        MODIFYBY = #{user_id},
        MODIFYON = NOW()
        <if test="ids != null and ids.size() > 0">
            where ATTENDANCE_ID in
            <foreach item="item" index="index" collection="ids"
                     open="(" separator="," close=")">
                #{item.attendanceid}
            </foreach>
        </if>
    </update>

    <select id="selectResignationAll" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance" resultType="com.nt.dao_Pfans.PFANS2000.Attendance">
        select *
        from
        (
            select
             a.attendance_id  as attendance_id
            ,a.center_id  as    center_id
            ,a.group_id  as     group_id
            ,a.team_id  as      team_id
            ,a.years  as        years
            ,a.months  as       months
            ,a.user_id  as      user_id
            ,a.dates  as        dates
            ,a.normal  as       normal
            ,a.actual  as       actual
            ,a.ordinaryindustry as ordinaryindustry
            ,a.weekendindustry as weekendindustry
            ,a.statutoryresidue as statutoryresidue
            ,a.annualrestday as annualrestday
            ,a.specialday as specialday
            ,a.youthday as youthday
            ,a.womensday as womensday
            ,a.shortsickleave  as shortsickleave
            ,a.longsickleave  as  longsickleave
            ,a.compassionateleave as compassionateleave
            ,a.annualrest       as annualrest
            ,a.daixiu           as daixiu
            ,a.parenting        as parenting
            ,a.parentalcare     as parentalcare
            ,a.nursingleave     as nursingleave
            ,a.welfare          as welfare
            ,a.absenteeism      as absenteeism
            ,a.recognitionstate as recognitionstate
            ,a.tshortsickleave  as tshortsickleave
            ,a.tlongsickleave   as tlongsickleave
            ,a.tcompassionateleave as tcompassionateleave
            ,a.tabsenteeism as tabsenteeism
            ,a.status as status
            ,'0' as tenantid
            from attendance a
            where a.USER_ID=#{user_id} and a.MONTHS=#{months} and a.YEARS =#{years} and a.RECOGNITIONSTATE = '1'

            union all

            select
             ar.attendance_id  as attendance_id
            ,ar.center_id  as    center_id
            ,ar.group_id  as     group_id
            ,ar.team_id  as      team_id
            ,ar.years  as        years
            ,ar.months  as       months
            ,ar.user_id  as      user_id
            ,ar.dates  as        dates
            ,ar.normal  as       normal
            ,ar.actual  as       actual
            ,ar.ordinaryindustry as ordinaryindustry
            ,ar.weekendindustry as weekendindustry
            ,ar.statutoryresidue as statutoryresidue
            ,ar.annualrestday as annualrestday
            ,ar.specialday as specialday
            ,ar.youthday as youthday
            ,ar.womensday as womensday
            ,ar.shortsickleave  as shortsickleave
            ,ar.longsickleave  as  longsickleave
            ,ar.compassionateleave as compassionateleave
            ,ar.annualrest       as annualrest
            ,ar.daixiu           as daixiu
            ,ar.parenting         as parenting
            ,ar.parentalcare      as parentalcare
            ,ar.nursingleave     as nursingleave
            ,ar.welfare          as welfare
            ,ar.absenteeism      as absenteeism
            ,ar.recognitionstate as recognitionstate
            ,ar.tshortsickleave  as tshortsickleave
            ,ar.tlongsickleave   as tlongsickleave
            ,ar.tcompassionateleave as tcompassionateleave
            ,ar.tabsenteeism as tabsenteeism
            ,ar.status as status
            ,'1' as tenantid
            from attendance_resignation ar
            where ar.USER_ID=#{user_id} and ar.MONTHS=#{months} and ar.YEARS=#{years}
        ) b
        order by b.dates,b.tenantid

    </select>

    <select id="selectResignation" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance" resultType="com.nt.dao_Pfans.PFANS2000.Attendance">
        select *
        from attendance_resignation
        where USER_ID=#{user_id} and MONTHS=#{months} and YEARS=#{years}
    </select>

      <!--region  update  ml  220105  ????   from-->
    <select id="getAttInfo" resultType="com.nt.dao_Pfans.PFANS2000.Vo.AttendanceReport">
        SELECT
            aee.USER_ID,
            aee.user_name,
            concat(aee.years, "-", aee.MONTHS) as dates,
            sum( IFNULL(aee.compassionateleave ,0)) AS compassionateleave,
            sum( IFNULL(aee.TCOMPASSIONATELEAVE ,0)) AS TCOMPASSIONATELEAVE,
            sum( IFNULL(aee.nursingleave ,0)) AS nursingleave,
            sum( IFNULL(aee.absenteeism ,0)) AS absenteeism,
            sum( IFNULL(aee.TABSENTEEISM ,0)) AS TABSENTEEISM,
            sum( IFNULL(aee.shortsickleave ,0)) AS shortsickleave,
            sum( IFNULL(aee.TSHORTSICKLEAVE ,0)) AS TSHORTSICKLEAVE,
            sum( IFNULL(aee.longsickleave ,0)) AS longsickleave,
            sum( IFNULL(aee.TLONGSICKLEAVE ,0)) AS TLONGSICKLEAVE,
            sum( IFNULL(aee.ordinaryindustry ,0)) AS ordinaryindustry,
            sum( IFNULL(aee.weekendindustry ,0)) AS weekendindustry,
            sum( IFNULL(aee.statutoryresidue ,0)) AS statutoryresidue,
            sum( IFNULL(aee.specialday ,0)) AS specialday,
            sum( IFNULL(aee.annualrestday ,0)) AS annualrestday,
            sum( IFNULL(aee.youthday ,0)) AS youthday,
            sum( IFNULL(aee.womensday ,0)) AS womensday
        FROM
            (
                SELECT
                    RUSLT.USER_NAME AS USER_NAME,
                    RUSLT.USER_ID,
                    ATT.years,
                    ATT.MONTHS,
                    ATT.compassionateleave,
                    ATT.TCOMPASSIONATELEAVE,
                    ATT.nursingleave,
                    ATT.absenteeism,
                    ATT.TABSENTEEISM,
                    ATT.shortsickleave,
                    ATT.TSHORTSICKLEAVE,
                    ATT.longsickleave,
                    ATT.TLONGSICKLEAVE,
                    ATT.ordinaryindustry,
                    ATT.weekendindustry,
                    ATT.statutoryresidue,
                    ATT.specialday,
                    ATT.annualrestday,
                    ATT.youthday,
                    ATT.womensday
                FROM
                    attendance ATT
                        INNER JOIN ( SELECT PUN.USER_ID, PUN.USER_NAME FROM PUNCHCARDRECORD PUN GROUP BY PUN.USER_ID, PUN.USER_NAME ) RUSLT ON ATT.USER_ID = RUSLT.USER_ID
                WHERE
                    MONTHS = #{month}
                  AND YEARS = #{year}
            ) aee
        GROUP BY
            aee.user_id
        ORDER BY
            aee.user_id
    </select>
      <!--endregion  update  ml  220105  ????   to-->

</mapper>
