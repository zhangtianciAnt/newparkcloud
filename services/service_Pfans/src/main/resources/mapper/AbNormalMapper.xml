<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_pfans.PFANS2000.mapper.AbNormalMapper">
    <select id="selectAbNormal" parameterType="java.lang.String" resultType="com.nt.dao_Pfans.PFANS2000.AbNormal">
        select
        ABNORMAL_ID abnormalid,
        CENTER_ID centerid,
        GROUP_ID groupid,
        TEAM_ID  teamid,
        USER_ID  user_id,
        APPLICATION_DATE applicationdate,
        ERROR_TYPE errortype,
        case when status = '7' then re_occurrence_date
        else occurrence_date end occurrencedate,
        case when status = '7' then re_finished_date
        else finished_date end finisheddate,
        PERIOD_START  periodstart,
        PERIOD_END  periodend,
        CAUSE  cause,
        UPLOADFILE uploadfile,
        RECOGNITIONSTATE recognitionstate,
        LENGTHTIME lengthtime,
        HOSPITAL hospital,
        EDATE edate,
        ENCLOSUREEXPLAIN enclosureexplain
        from abnormal
        where status >= 4
		and error_type in ('PR013012','PR013012')
    </select>
    <select id="selectAbNormalGiving" parameterType="java.lang.String" resultType="com.nt.dao_Pfans.PFANS2000.AbNormal">
        SELECT
        USER_ID,
        errortype,
        occurrencedate,
        finisheddate,
        worktime,
        relengthtime,
        CASE

        WHEN errortype = 'PR013012'
        AND DATE_FORMAT( occurrencedate, '%Y%m' ) = DATE_FORMAT( DATE_SUB( NOW( ), INTERVAL 1 MONTH ), '%Y%m' ) THEN
        '1'
        WHEN errortype = 'PR013012'
        AND DATE_FORMAT( finisheddate, '%Y%m' ) = DATE_FORMAT( DATE_SUB( NOW( ), INTERVAL 1 MONTH ), '%Y%m' ) THEN
        '2' ELSE '0'
        END AS TENANTID
        FROM
        (
            SELECT
            USER_ID,
            error_type AS errortype,
            MIN( CASE WHEN STATUS = '7' THEN re_occurrence_date ELSE occurrence_date END ) occurrencedate,
            MAX( CASE WHEN STATUS = '7' THEN re_finished_date ELSE finished_date END ) finisheddate,
            my_WorkingDays (
            date_format( DATE_SUB( NOW(), INTERVAL 1 MONTH ), '%Y%m' ))/ 8 AS worktime,
            my_AttendanceDays (
            date_format( DATE_SUB( NOW(), INTERVAL 1 MONTH ), '%Y%m' ))/ 8 AS relengthtime
            FROM
            abnormal
            WHERE
            STATUS >= 4
            AND error_type = 'PR013012'
            AND DATE_FORMAT( occurrence_date, '%Y%m' ) <= DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 1 MONTH ), '%Y%m' ) AND DATE_FORMAT( finished_date, '%Y%m' ) >= DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 1 MONTH ), '%Y%m' )
            GROUP BY
            USER_ID UNION ALL
            SELECT
            USER_ID,
            error_type AS errortype,
            MIN( CASE WHEN STATUS = '7' THEN re_occurrence_date ELSE occurrence_date END ) occurrencedate,
            MAX( CASE WHEN STATUS = '7' THEN re_finished_date ELSE finished_date END ) finisheddate,
            my_WorkingDays (
            date_format( DATE_SUB( NOW(), INTERVAL 1 MONTH ), '%Y%m' ))/ 8 AS worktime,
            my_AttendanceDays (
            date_format( DATE_SUB( NOW(), INTERVAL 1 MONTH ), '%Y%m' ))/ 8 AS relengthtime
            FROM
            abnormal
            WHERE
            STATUS >= 4
            AND error_type = 'PR013013'
            AND DATE_FORMAT( occurrence_date, '%Y%m' ) <= DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 1 MONTH ), '%Y%m' ) AND DATE_FORMAT( finished_date, '%Y%m' ) >= DATE_FORMAT( DATE_SUB( NOW(), INTERVAL 1 MONTH ), '%Y%m' )
            GROUP BY
            USER_ID
        ) newtable
    </select>
    <select id="selectAbNormalThisYear" resultType="Double">
        select
        sum(
            case when a.STATUS = 7
                 then CONVERT(a.RE_LENGTHTIME,DECIMAL(10,1))
			else
			     CONVERT(a.LENGTHTIME,DECIMAL(10,1))
			END) as Hours
        from abnormal a
        where (((date_format(a.RE_OCCURRENCE_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																		 AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))
								and
							   (date_format(a.RE_FINISHED_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																		 AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m')))
	        or ((date_format(a.OCCURRENCE_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																	AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))
						  and
						  (date_format(a.FINISHED_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																	AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))))
        and user_id = #{user_id}
        and status >= 4
        and (error_type = 'PR013010' or error_type = 'PR013009')
    </select>
    <select id="selectAbNormal1"  resultType="com.nt.dao_Pfans.PFANS2000.AbNormal">
        SELECT
         SUM(lengthtime) AS lengthtime
        FROM abnormal
        WHERE error_type = 'PR013008'
        and status != '1'
    </select>
    <select id="selectAbNormalDate" resultType="Double">
        select sum(timestampdiff(day,occurrence_date,FINISHED_DATE) + 1) as datelength
        from abnormal where date_format(createon,'%Y-%m-%d')
        between CONCAT(YEAR(CURDATE()),'-','04','-','01') and CONCAT(YEAR(CURDATE()) +1,'-','03','-','31')
        and error_type = 'PR013009'
        and user_id = #{userid}
        and status != '1'
    </select>
    <select id="selectAbNormalParent" parameterType="com.nt.dao_Pfans.PFANS2000.AbNormal" resultType="com.nt.dao_Pfans.PFANS2000.AbNormal">
        select * from abnormal
        where year(createon)=year(now())
        and error_type = 'PR013014'
        and status not in ('1','3')
        and user_id = #{userid}
    </select>
    <select id="getRestday" resultType="com.nt.dao_Pfans.PFANS2000.Vo.restViewVo">
        select 'PR013006' as 'codetype' ,sum(IFNULL(RESTDAYS,0)) as sumDay
        from restview
        where user_id = #{userid}

        union all
        select 'PR013007' as 'codetype' ,RESTDAYS as sumDay
        from restview2
        where user_id = #{userid}
    </select>
    <select id="selectfinishAnnuel" resultType="Double">
        select sum(
            case when a.STATUS = 7
                then case when (date_format(a.RE_OCCURRENCE_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																		 AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))
								and
							   (date_format(a.RE_FINISHED_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																		 AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))
						 then CONVERT(a.RE_LENGTHTIME,DECIMAL(10,1))
						 else 0
						 END
			else
			    case when (date_format(a.OCCURRENCE_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																		 AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))
								and
							   (date_format(a.FINISHED_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																		 AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))
						 then CONVERT(a.LENGTHTIME,DECIMAL(10,1))
						 else 0
						 END
			END
) /8 as annualleaveshengyu
from abnormal a
where a.STATUS in ('4','5','6','7')
and a.ERROR_TYPE ='PR013005'
and a.user_id = #{userid}
    </select>
    <select id="selectfinishAnnuel1" resultType="com.nt.dao_Pfans.PFANS2000.AbNormal">
        select
            status as status,
            OCCURRENCE_DATE as occurrencedate,
            FINISHED_DATE as finisheddate,
            RE_OCCURRENCE_DATE as reoccurrencedate,
            RE_FINISHED_DATE as refinisheddate,
            LENGTHTIME as lengthtime,
            RE_LENGTHTIME as relengthtime
        from abnormal a
        where
            a.STATUS !='1'
        and a.ERROR_TYPE ='PR013005'
        and a.user_id = #{userid}
        and (((date_format(a.RE_OCCURRENCE_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																		 AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))
								and
							   (date_format(a.RE_FINISHED_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																		 AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m')))
	        or ((date_format(a.OCCURRENCE_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																	AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))
						  and
						  (date_format(a.FINISHED_DATE,'%Y-%m') BETWEEN date_format( concat( #{year}, '-04-01' ) ,'%Y-%m')
																	AND  date_format( concat(  CONVERT(#{year}, SIGNED) + 1 , '-03-31' ),'%Y-%m'))))
    </select>
    <select id="selectAbnomalBystatusandUserid"  resultType="com.nt.dao_Pfans.PFANS2000.AbNormal">
        select
            status as status,
            OCCURRENCE_DATE as occurrencedate,
            FINISHED_DATE as finisheddate,
            RE_OCCURRENCE_DATE as reoccurrencedate,
            RE_FINISHED_DATE as refinisheddate,
            LENGTHTIME as lengthtime,
            RE_LENGTHTIME as relengthtime
        from abNormal
        where status in ('2','5') and user_id = #{userid}
    </select>
    <select id="getabnormalByuseridandDate" resultType="com.nt.dao_Pfans.PFANS2000.AbNormal">
        select
        ABNORMAL_ID as abnormalid,
        USER_ID as user_id,
        APPLICATION_DATE as applicationdate,
        ERROR_TYPE as errortype,
        OCCURRENCE_DATE as occurrencedate,
        FINISHED_DATE as finisheddate,
        LENGTHTIME as lengthtime,
        RE_LENGTHTIME as relengthtime,
        RE_OCCURRENCE_DATE as reoccurrencedate,
        RE_FINISHED_DATE as refinisheddate,
        STATUS as status
        from abnormal a
        where a.STATUS in ('0','2','3','4')
        and #{dates} between date_format(a.OCCURRENCE_DATE,'%Y-%m-%d')  and  date_format(a.FINISHED_DATE,'%Y-%m-%d')
        and a.user_id = #{userid}
        UNION
        select
        ABNORMAL_ID as abnormalid,
        USER_ID as user_id,
        APPLICATION_DATE as applicationdate,
        ERROR_TYPE as errortype,
        OCCURRENCE_DATE as occurrencedate,
        FINISHED_DATE as finisheddate,
        LENGTHTIME as lengthtime,
        RE_LENGTHTIME as relengthtime,
        RE_OCCURRENCE_DATE as reoccurrencedate,
        RE_FINISHED_DATE as refinisheddate,
        STATUS as status
        from abnormal a
        where a.STATUS in ('5','6','7')
        and #{dates} between date_format(a.RE_OCCURRENCE_DATE,'%Y-%m-%d') and date_format(a.RE_FINISHED_DATE,'%Y-%m-%d')
        and a.user_id = #{userid}
    </select>

    <select id="selectAttenSumSick" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance" resultType="java.lang.Double">
        select
        sum(
        case when a.STATUS = 7
        then
        case when (a.RE_OCCURRENCE_DATE >= DATE_FORMAT(DATE_SUB(#{dates},INTERVAL 1 YEAR),'%Y-%m-%d') and a.RE_FINISHED_DATE &lt;= DATE_FORMAT(#{dates},'%Y-%m-%d'))
        then CONVERT(a.RE_LENGTHTIME,DECIMAL(10,1))
        else 0
        end
        else
        case when (a.OCCURRENCE_DATE >= DATE_FORMAT(DATE_SUB(#{dates},INTERVAL 1 YEAR),'%Y-%m-%d') and a.FINISHED_DATE &lt;= DATE_FORMAT(#{dates},'%Y-%m-%d'))
        then CONVERT(a.LENGTHTIME,DECIMAL(10,1))
        else 0
        end
        END) as Hours
        from abnormal a
        where
        ERROR_TYPE='PR013009'
        and user_id = #{user_id}
        and status >=4
    </select>

    <select id="selectAttenSumSick1" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance" resultType="com.nt.dao_Pfans.PFANS2000.AbNormal">
        select
            status as status,
            OCCURRENCE_DATE as occurrencedate,
            FINISHED_DATE as finisheddate,
            RE_OCCURRENCE_DATE as reoccurrencedate,
            RE_FINISHED_DATE as refinisheddate,
            case when a.STATUS = 7
            then
            case when (a.RE_OCCURRENCE_DATE &lt; DATE_FORMAT(DATE_SUB(#{dates},INTERVAL 1 YEAR),'%Y-%m-%d') and a.RE_FINISHED_DATE > DATE_FORMAT(DATE_SUB(#{dates},INTERVAL 1 YEAR),'%Y-%m-%d'))
            then CONVERT(a.RE_LENGTHTIME,DECIMAL(10,1))
            else 0
            end
            else
            0
            end as RELENGTHTIME,
            case when a.STATUS = 4 or 	a.STATUS = 5 or a.STATUS = 6
            then
            case when (a.OCCURRENCE_DATE &lt; DATE_FORMAT(DATE_SUB(#{dates},INTERVAL 1 YEAR),'%Y-%m-%d') and a.FINISHED_DATE > DATE_FORMAT(DATE_SUB(#{dates},INTERVAL 1 YEAR),'%Y-%m-%d'))
            then CONVERT(a.LENGTHTIME,DECIMAL(10,1))
            else 0
            end
            else 0
            END as LENGTHTIME
        from abNormal a
        where status >=4 and user_id = #{user_id}
        and ERROR_TYPE='PR013009'
    </select>

    <select id="selectAttenSumSick2" parameterType="com.nt.dao_Pfans.PFANS2000.Attendance" resultType="com.nt.dao_Pfans.PFANS2000.AbNormal">
        select
            status as status,
            OCCURRENCE_DATE as occurrencedate,
            FINISHED_DATE as finisheddate,
            RE_OCCURRENCE_DATE as reoccurrencedate,
            RE_FINISHED_DATE as refinisheddate,
            case when a.STATUS = 7
            then
            case when (a.RE_OCCURRENCE_DATE &lt; DATE_FORMAT(#{dates},'%Y-%m-%d') and a.RE_FINISHED_DATE > DATE_FORMAT(#{dates},'%Y-%m-%d'))
            then CONVERT(a.RE_LENGTHTIME,DECIMAL(10,1))
            else 0
            end
            else
            0
            end as RELENGTHTIME,
            case when a.STATUS = 4 or 	a.STATUS = 5 or a.STATUS = 6
            then
            case when (a.OCCURRENCE_DATE &lt; DATE_FORMAT(#{dates},'%Y-%m-%d') and a.FINISHED_DATE > DATE_FORMAT(#{dates},'%Y-%m-%d'))
            then CONVERT(a.LENGTHTIME,DECIMAL(10,1))
            else 0
            end
            else 0
            END as LENGTHTIME
        from abNormal a
        where status >=4 and user_id = #{user_id}
        and ERROR_TYPE='PR013009'
    </select>





</mapper>

