<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_pfans.PFANS2000.mapper.BaseMapper">
    <insert id="insertBase" parameterType="com.nt.dao_Pfans.PFANS2000.Base">
         insert into base (base_id ,giving_id,department_id,user_id,rn,sex,onlychild,`type`,bonus,sociology,registered,
        lastmonth,thismonth,pension,yanglaojs,shiyejs,gongshangjs,medical,yiliaojs,shengyujs,accumulation,heating,workdate,rowindex,thismonthbasic,thismonthduty,lastmonthbasic,lastmonthduty,tmabasic
        ,groupid,lastmonthsuitdays,lastmonthdays,thismonthsuitdays,thismonthdays,enddate,rnbasesalary)
         values
     <foreach collection="bases" index="index" item="item" separator=",">
         (#{item.base_id},#{item.giving_id},#{item.department_id},#{item.user_id},#{item.rn},#{item.sex},#{item.onlychild},
         #{item.type},#{item.bonus},#{item.sociology},#{item.registered},#{item.lastmonth},#{item.thismonth},#{item.pension},
         #{item.yanglaojs},#{item.shiyejs},#{item.gongshangjs},#{item.medical},#{item.yiliaojs},#{item.shengyujs},#{item.accumulation},
         #{item.heating},#{item.workdate},#{item.rowindex},#{item.thismonthbasic},#{item.thismonthduty},#{item.lastmonthbasic},
         #{item.lastmonthduty},#{item.tmabasic},#{item.groupid},#{item.lastmonthsuitdays},#{item.lastmonthdays},#{item.thismonthsuitdays},
         #{item.thismonthdays},#{item.enddate},#{item.rnbasesalary})
     </foreach>
    </insert>

    <select id="selectBaseType" parameterType="java.lang.String" resultType="com.nt.dao_Pfans.PFANS2000.Base">
        SELECT MAX(TEMP.type) type,TEMP.USER_ID FROM (
        SELECT USER_ID,'1' type
        FROM induction
        where
        GIVING_ID = #{givingid}
        UNION ALL
        SELECT USER_ID,'2' type
        FROM abnormal
        where status >= 4
        and error_type = 'PR013012'
        and date_format(finished_date,'%Y%m') > date_format(DATE_SUB(NOW(), INTERVAL 1 MONTH),'%Y%m')
        and DAYOFWEEK(date_format(finished_date,'%Y%m%d')) != 7 #不等于周六（待考虑）
        and DAYOFWEEK(date_format(finished_date,'%Y%m%d')) != 1 #不等于周日（待考虑）
        UNION ALL
        SELECT USER_ID,'3' type
        FROM abnormal
        where
        ERROR_TYPE = 'PR013013'
        and DATE_FORMAT(abnormal.occurrence_date,'%Y%m') &lt;= DATE_FORMAT( DATE_SUB(NOW(), interval 1 MONTH),'%Y%m')
        and DATE_FORMAT(abnormal.finished_date,'%Y%m') >= DATE_FORMAT( DATE_SUB(NOW(), interval 1 MONTH),'%Y%m')
        UNION ALL
        SELECT USER_ID,'4' type
        FROM retire
        where
        GIVING_ID = #{givingid}
        ) TEMP
        GROUP BY TEMP.USER_ID
    </select>
</mapper>

