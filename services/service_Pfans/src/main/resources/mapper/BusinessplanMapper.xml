<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_pfans.PFANS1000.mapper.BusinessplanMapper">
    <select id="getAcutal" resultType="com.nt.dao_Pfans.PFANS1000.Vo.ActualPL">
            select code,
       MAX(CASE a.month WHEN 4 THEN a.rmb ELSE 0 END) AS 'actual4',
       MAX(CASE a.month WHEN 5 THEN a.rmb ELSE 0 END) AS 'actual5',
       MAX(CASE a.month WHEN 6 THEN a.rmb ELSE 0 END) AS 'actual6',
       MAX(CASE a.month WHEN 7 THEN a.rmb ELSE 0 END) AS 'actual7',
       MAX(CASE a.month WHEN 8 THEN a.rmb ELSE 0 END) AS 'actual8',
       MAX(CASE a.month WHEN 9 THEN a.rmb ELSE 0 END) AS 'actual9',
       MAX(CASE a.month WHEN 10 THEN a.rmb ELSE 0 END) AS 'actual10',
       MAX(CASE a.month WHEN 11 THEN a.rmb ELSE 0 END) AS 'actual11',
       MAX(CASE a.month WHEN 12 THEN a.rmb ELSE 0 END) AS 'actual12',
       MAX(CASE a.month WHEN 1 THEN a.rmb ELSE 0 END) AS 'actual1',
       MAX(CASE a.month WHEN 2 THEN a.rmb ELSE 0 END) AS 'actual2',
       MAX(CASE a.month WHEN 3 THEN a.rmb ELSE 0 END) AS 'actual3'
    from
(
select code, sum(rmb) as rmb, month from (
select d.CODE, (IFNULL(SUM(t.RMB +t.tormb), 0) + IFNULL(SUM(pur.RMB +t.tormb), 0) + IFNULL(SUM(o.RMB +t.tormb), 0)) as rmb,MONTH(p.REIMBURSEMENTDATE) as month
from (
select `CODE` from dictionary where PCODE = 'PJ111'
) as d left join publicexpense p on 1=1
left JOIN trafficdetails t
                   on p.PUBLICEXPENSE_ID = t.PUBLICEXPENSE_ID
                       and t.PLSUMMARY  = d.CODE
                       and t.DEPARTMENTNAME = #{groupid}
         left JOIN purchasedetails pur
                   on p.PUBLICEXPENSE_ID = pur.PUBLICEXPENSE_ID
                       and pur.PLSUMMARY = d.CODE
                       and pur.DEPARTMENTNAME = #{groupid}
         left JOIN otherdetails o
                   on p.PUBLICEXPENSE_ID = o.PUBLICEXPENSE_ID
                       and o.PLSUMMARY = d.CODE
                       and o.DEPARTMENTNAME = #{groupid}
where p.REIMBURSEMENTDATE &gt;= #{startday} and p.REIMBURSEMENTDATE &lt;= #{endday}
group by MONTH(p.REIMBURSEMENTDATE), d.CODE

union all

select 'PJ111008', (IFNULL(SUM(t.RMB +t.tormb), 0) + IFNULL(SUM(a.RMB), 0) + IFNULL(SUM(o.RMB +t.tormb), 0)) as rmb,MONTH(e.REIMBURSEMENTDATE) as month
from evection e
		left join trafficdetails t
                   on e.EVECTION_ID = t.PUBLICEXPENSE_ID
                       and t.PLSUMMARY  = 'PJ111008'
                       and t.DEPARTMENTNAME = #{groupid}
         left JOIN accommodationdetails a
                   on e.EVECTION_ID = a.EVECTION_ID
                       and a.PLSUMMARY = 'PJ111008'
                       and a.DEPARTMENTNAME = #{groupid}
         left JOIN otherdetails o
                   on e.EVECTION_ID = o.PUBLICEXPENSE_ID
                       and o.PLSUMMARY = 'PJ111008'
                       and o.DEPARTMENTNAME = #{groupid}
 where e.REIMBURSEMENTDATE &gt;= #{startday} and e.REIMBURSEMENTDATE &lt;= #{endday}
group by MONTH(e.REIMBURSEMENTDATE)
) pj group by code, month

union all
select 'neibuhetong' as code,SUM(CLAIMAMOUNT) as rmb, MONTH(contract.DELIVERYDATE) as month
from contractnumbercount contract
inner join companyprojects company
on company.COMPANYPROJECTS_ID = contract.COMPANYPROJECTSID
where company.GROUP_ID = "58D1EE595EB8A700F3E75125576D5B7D0A41"
and contract.DELIVERYDATE &gt;= #{startday} and contract.DELIVERYDATE &lt;= #{endday}
GROUP BY MONTH(contract.DELIVERYDATE)

union all
select
case
when contracttype = 'HT008009' then 'HT008009'
when contracttype in ("HT008007","HT008008") then 'HT008008'
when contracttype in ("HT008001","HT008002","HT008003","HT008004","HT008005","HT008006") then 'HT008006'
else NULL
end as contracttype1,
SUM(cn.CLAIMAMOUNT) as rmb,MONTH(cn.DELIVERYDATE) as month
from contractapplication ca
inner join contractnumbercount cn
on ca.CONTRACTNUMBER = cn.CONTRACTNUMBER
where ca.state='有效'
and ca.type = "1"
and ca.GROUP_ID = #{groupid}
and cn.DELIVERYDATE &gt;= #{startday} and cn.DELIVERYDATE &lt;= #{endday}
GROUP BY MONTH(cn.DELIVERYDATE), contracttype1
having contracttype1 is not null

union all

select 'worktime', SUM(l.TIME_START) as worktime ,MONTH(l.LOG_DATE) as month from logmanagement l
inner join companyprojects c
on l.PROJECT_ID = c.COMPANYPROJECTS_ID
 where c.GROUP_ID = #{groupid}
 and l.LOG_DATE &gt;= #{startday}
 and l.LOG_DATE &lt;= #{endday}
group by MONTH(l.LOG_DATE)

) a
group by code

union all
select concat('worktime', if(e.VENUETARGET = '是','0','1')) as CODE, IFNULL(sum(APRIL),0) as actual4 ,IFNULL(sum(MAY),0) as actual5,IFNULL(sum(JUNE),0) as actual6,
IFNULL(sum(JULY),0) as actual7,IFNULL(sum(AUGUST),0) as actual8,
IFNULL(sum(SEPTEMBER),0) as actual9,IFNULL(sum(OCTOBER),0) as actual10,IFNULL(sum(NOVEMBER),0) as actual11,IFNULL(sum(DECEMBER),0) as actual12,
IFNULL(sum(JANUARY),0) as actual1, IFNULL(sum(FEBRUARY),0) as actual2, IFNULL(sum(MARCH),0) as actual3
from delegainformation d
inner join companyprojects c
on d.COMPANYPROJECTS_ID = c.COMPANYPROJECTS_ID
inner join projectsystem p
on d.PROJECTSYSTEM_ID = p.PROJECTSYSTEM_ID
inner join expatriatesinfor e
on p.SUPPLIERNAMEID = e.EXPATRIATESINFOR_ID
where c.GROUP_ID = #{groupid}
and d.year &gt;= #{startday}
and d.year &lt;= #{endday}
group by e.VENUETARGET

union all
select "neibu" as code,sum(cost.COST4) as actual4,sum(cost.COST5) as actual5,sum(cost.COST6) as actual6,sum(cost.COST7) as actual7,sum(cost.COST8) as actual8,sum(cost.COST9) as actual9,sum(cost.COST10) as actual10,sum(cost.COST11) as actual11,sum(cost.COST12) actual12,sum(cost.COST1) as actual1,sum(cost.COST2) as actual2,sum(cost.COST3) actual3
from coststatistics cost
inner join expatriatesinfor exp
  on cost.BPNAME = exp.EXPATRIATESINFOR_ID
inner join projectsystem ps
  on ps.`SUPPLIERNAMEID` = cost.bpname
inner join companyprojects cp
  on ps.COMPANYPROJECTS_ID = cp.COMPANYPROJECTS_ID
where cp.GROUP_ID = #{groupid}
group by cost.BPCOMPANY,code
    </select>

    <select id="getBusinessplan" resultType="com.nt.dao_Pfans.PFANS1000.Businessplan">
        select group_id,groupb1,groupb2
        from businessplan
        where year = #{years}
        <if test="groupIdList != null and groupIdList.size() > 0 ">
            and group_id in
            <foreach item="item" index="index" collection="groupIdList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
</mapper>

