<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_pfans.PFANS2000.mapper.WagesMapper">
    <select id="selectWage" resultType="com.nt.dao_Pfans.PFANS2000.Wages">
     select
     temp1.department_id, #部门
     temp1.user_id,   #名字
     IF(temp1.workdate="",null,temp1.workdate) as workdate,#入社年月
     temp1.sex,#性別
     temp1.onlychild,#独生子女
     temp1.type,#入/退職/産休
     temp1.bonus,#奨金計上
     temp1.sociology,#1999年前社会人
     temp1.registered,#大連戸籍
     temp1.pension,#養老・失業・工傷保険基数
     temp1.medical,#医療・生育保険基数
     temp1.accumulation,#住房公积金基数
     temp1.lastmonth,#上月基本給
     temp1.thismonth,#本月基本給
     temp1.birthrest,#産休出勤日数(看護休暇日数)
     temp1.thismonthbasic,#本月入/退職/産休基本給
     temp1.shortillness,#短病欠時数
     temp1.longillness,#长病欠時数
     temp1.owediligence,#欠勤時数
     temp1.owingcontrol,#病欠/欠勤控除
     temp1.actualamount,#基本給实际金额
     temp1.housingsubsidy,#住房补助
     temp1.lunchsubsidy,#午餐补助
     temp1.overtimesubsidy,#加班补助
     temp1.other1,#其他1
     temp1.total1, #小计1(基本給+补助)
     temp1.traffic,#交通补助
     temp1.washingtheory,#女性洗理费
     temp1.other2,#其他2
     temp1.appreciation,#月度賞与
     temp1.total2, #小计2
     temp1.taxestotal,#纳税工资总额(小计1+2)
     temp1.heating,#采暖费
     temp1.onlychildmoney,#独生子女费
     temp1.total3,#小计3
     temp1.totalwages, #工资总额(纳税+免税)
     temp1.endowmentinsurance,#养老保险
     temp1.medicalinsurance,#医疗保险
     temp1.unemploymentinsurance,#失业保险
     temp1.socialinsurance,#个人社会保险(専項控除)
     temp1.accumulationfund,#个人住房公积金(専項控除)
     temp1.disciplinarycontrol,#个人社会保险费+公积金(専項控除)合计
     temp1.thismonthterm,#専項控除累計（当月まで）
     temp1.thismonthadditional,#附加控除累計（当月まで）
     temp1.thismonthdutyfree,#免税分累計（当月まで）
     temp1.lastdutyfree,		#年間累計税金（先月まで）50
     temp1.housingmoneys,#住房公积金应纳税金额
     temp1.other4,#其他4公司负担社保（24元）
     temp1.other5,#其他5（保険：福祉）
     temp1.shouldwages,#当月応発工資（工资总额(纳税+免税)+只納税）
     temp1.shouldcumulative,#累計応発工資（当月含）
     temp1.shouldpaytaxes, #累計应纳税所得额
     IF(ROUND(IFNULL(temp1.shouldpaytaxes*
     CASE WHEN (temp1.shouldpaytaxes >0 and temp1.shouldpaytaxes&lt;=36000 ) then 0.03
     WHEN (temp1.shouldpaytaxes >36000 and temp1.shouldpaytaxes&lt;=144000 ) then 0.1
     WHEN (temp1.shouldpaytaxes >144000 and temp1.shouldpaytaxes&lt;=300000 ) then 0.2
     WHEN (temp1.shouldpaytaxes >300000 and temp1.shouldpaytaxes&lt;=420000 ) then 0.25
     WHEN (temp1.shouldpaytaxes >420000 and temp1.shouldpaytaxes&lt;660000 ) then 0.3
     WHEN (temp1.shouldpaytaxes >660000 and temp1.shouldpaytaxes&lt;=960000 ) then 0.35
     WHEN (temp1.shouldpaytaxes >960000) then 0.45 END -
     CASE WHEN (temp1.shouldpaytaxes >0 and temp1.shouldpaytaxes&lt;=36000 ) then 0
     WHEN (temp1.shouldpaytaxes >36000 and temp1.shouldpaytaxes&lt;=144000 ) then 2520
     WHEN (temp1.shouldpaytaxes >144000 and temp1.shouldpaytaxes&lt;=300000 ) then 16920
     WHEN (temp1.shouldpaytaxes >300000 and temp1.shouldpaytaxes&lt;=420000 ) then 31920
     WHEN (temp1.shouldpaytaxes >420000 and temp1.shouldpaytaxes&lt;660000 ) then 52920
     WHEN (temp1.shouldpaytaxes >660000 and temp1.shouldpaytaxes&lt;=960000 ) then 85920
     WHEN (temp1.shouldpaytaxes >960000) then 181920 END
     -temp1.lastdutyfree,0),2)&lt;0,0,ROUND(IFNULL(temp1.shouldpaytaxes*
     CASE WHEN (temp1.shouldpaytaxes >0 and temp1.shouldpaytaxes&lt;=36000 ) then 0.03
     WHEN (temp1.shouldpaytaxes >36000 and temp1.shouldpaytaxes&lt;=144000 ) then 0.1
     WHEN (temp1.shouldpaytaxes >144000 and temp1.shouldpaytaxes&lt;=300000 ) then 0.2
     WHEN (temp1.shouldpaytaxes >300000 and temp1.shouldpaytaxes&lt;=420000 ) then 0.25
     WHEN (temp1.shouldpaytaxes >420000 and temp1.shouldpaytaxes&lt;660000 ) then 0.3
     WHEN (temp1.shouldpaytaxes >660000 and temp1.shouldpaytaxes&lt;=960000 ) then 0.35
     WHEN (temp1.shouldpaytaxes >960000) then 0.45 END -
     CASE WHEN (temp1.shouldpaytaxes >0 and temp1.shouldpaytaxes&lt;=36000 ) then 0
     WHEN (temp1.shouldpaytaxes >36000 and temp1.shouldpaytaxes&lt;=144000 ) then 2520
     WHEN (temp1.shouldpaytaxes >144000 and temp1.shouldpaytaxes&lt;=300000 ) then 16920
     WHEN (temp1.shouldpaytaxes >300000 and temp1.shouldpaytaxes&lt;=420000 ) then 31920
     WHEN (temp1.shouldpaytaxes >420000 and temp1.shouldpaytaxes&lt;660000 ) then 52920
     WHEN (temp1.shouldpaytaxes >660000 and temp1.shouldpaytaxes&lt;=960000 ) then 85920
     WHEN (temp1.shouldpaytaxes >960000) then 181920 END
     -temp1.lastdutyfree,0),2)) as thismonthadjustment, #本月应扣缴所得税
     ROUND(temp1.totalwages-temp1.disciplinarycontrol-IF(ROUND(IFNULL(temp1.shouldpaytaxes*
     CASE WHEN (temp1.shouldpaytaxes >0 and temp1.shouldpaytaxes&lt;=36000 ) then 0.03
     WHEN (temp1.shouldpaytaxes >36000 and temp1.shouldpaytaxes&lt;=144000 ) then 0.1
     WHEN (temp1.shouldpaytaxes >144000 and temp1.shouldpaytaxes&lt;=300000 ) then 0.2
     WHEN (temp1.shouldpaytaxes >300000 and temp1.shouldpaytaxes&lt;=420000 ) then 0.25
     WHEN (temp1.shouldpaytaxes >420000 and temp1.shouldpaytaxes&lt;660000 ) then 0.3
     WHEN (temp1.shouldpaytaxes >660000 and temp1.shouldpaytaxes&lt;=960000 ) then 0.35
     WHEN (temp1.shouldpaytaxes >960000) then 0.45 END -
     CASE WHEN (temp1.shouldpaytaxes >0 and temp1.shouldpaytaxes&lt;=36000 ) then 0
     WHEN (temp1.shouldpaytaxes >36000 and temp1.shouldpaytaxes&lt;=144000 ) then 2520
     WHEN (temp1.shouldpaytaxes >144000 and temp1.shouldpaytaxes&lt;=300000 ) then 16920
     WHEN (temp1.shouldpaytaxes >300000 and temp1.shouldpaytaxes&lt;=420000 ) then 31920
     WHEN (temp1.shouldpaytaxes >420000 and temp1.shouldpaytaxes&lt;660000 ) then 52920
     WHEN (temp1.shouldpaytaxes >660000 and temp1.shouldpaytaxes&lt;=960000 ) then 85920
     WHEN (temp1.shouldpaytaxes >960000) then 181920 END
     -temp1.lastdutyfree,0),2)&lt;0,0,ROUND(IFNULL(temp1.shouldpaytaxes*
     CASE WHEN (temp1.shouldpaytaxes >0 and temp1.shouldpaytaxes&lt;=36000 ) then 0.03
     WHEN (temp1.shouldpaytaxes >36000 and temp1.shouldpaytaxes&lt;=144000 ) then 0.1
     WHEN (temp1.shouldpaytaxes >144000 and temp1.shouldpaytaxes&lt;=300000 ) then 0.2
     WHEN (temp1.shouldpaytaxes >300000 and temp1.shouldpaytaxes&lt;=420000 ) then 0.25
     WHEN (temp1.shouldpaytaxes >420000 and temp1.shouldpaytaxes&lt;660000 ) then 0.3
     WHEN (temp1.shouldpaytaxes >660000 and temp1.shouldpaytaxes&lt;=960000 ) then 0.35
     WHEN (temp1.shouldpaytaxes >960000) then 0.45 END -
     CASE WHEN (temp1.shouldpaytaxes >0 and temp1.shouldpaytaxes&lt;=36000 ) then 0
     WHEN (temp1.shouldpaytaxes >36000 and temp1.shouldpaytaxes&lt;=144000 ) then 2520
     WHEN (temp1.shouldpaytaxes >144000 and temp1.shouldpaytaxes&lt;=300000 ) then 16920
     WHEN (temp1.shouldpaytaxes >300000 and temp1.shouldpaytaxes&lt;=420000 ) then 31920
     WHEN (temp1.shouldpaytaxes >420000 and temp1.shouldpaytaxes&lt;660000 ) then 52920
     WHEN (temp1.shouldpaytaxes >660000 and temp1.shouldpaytaxes&lt;=960000 ) then 85920
     WHEN (temp1.shouldpaytaxes >960000) then 181920 END
     -temp1.lastdutyfree,0),2)),2) as realwages, #当月实发工资
     temp1.comendowmentinsurance, #养老保险
     temp1.commedicalinsurance, #医疗保险
     temp1.comunemploymentinsurance, #失业保险
     temp1.cominjuryinsurance, #工伤保险
     temp1.combirthinsurance, #生育保险
     temp1.comheating, #暖房费
     temp1.comaccumulationfund, #住房公积金
     temp1.total, #总计
     (temp1.total1 + temp1.appreciation) as labourunionbase, #工会经费基数
     ROUND((temp1.total1 + temp1.appreciation)*0.02,2) as labourunionfunds,#工会经费
     ROUND(temp1.totalwages+temp1.other4+temp1.other5+temp1.total+ROUND((temp1.total1 + temp1.appreciation)*0.02,2),2) as comtotalwages,#工资总额(纳税+免税)+福祉+公司負担+工会経費总计
     (IF(temp1.bonus=1,ROUND(temp1.thismonth*3.6/12,0),IF(temp1.bonus=2,ROUND(temp1.thismonth*5/12,0),0))-temp1.appreciation) as bonusmoney,#計上奨金
     (ROUND(temp1.totalwages+temp1.other4+temp1.other5+temp1.total+ROUND((temp1.total1 + temp1.appreciation)*0.02,2),2)+IF(temp1.bonus=1,ROUND(temp1.thismonth*3.6/12,0),IF(temp1.bonus=2,ROUND(temp1.thismonth*5/12,0),0))-temp1.appreciation) as totalbonus#总计+計上奨金
     from (select temp.*,(temp.actualamount+temp.housingsubsidy+temp.lunchsubsidy+temp.overtimesubsidy+temp.other1) as total1, #小计1(基本給+补助)
     (temp.traffic+temp.washingtheory+temp.other2+temp.appreciation) as total2, #小计2
     (temp.actualamount+temp.housingsubsidy+temp.lunchsubsidy+temp.overtimesubsidy+temp.other1+temp.traffic+temp.washingtheory+temp.other2+temp.appreciation) as taxestotal,#纳税工资总额(小计1+2)
     (temp.actualamount+temp.housingsubsidy+temp.lunchsubsidy+temp.overtimesubsidy+temp.other1+temp.traffic+temp.washingtheory+temp.other2+temp.appreciation+temp.total3) as totalwages, #工资总额(纳税+免税)
     (select SUM(IF(MONTH(wages.CREATEON)=11,0,wages.thismonthadjustment)) from wages where wages.USER_ID = temp.USER_ID and wages.CREATEON = YEAR(now()))as lastdutyfree,		#年間累計税金（先月まで）50
     (temp.actualamount+temp.housingsubsidy+temp.lunchsubsidy+temp.overtimesubsidy+temp.other1+temp.traffic+temp.washingtheory+temp.other2+temp.appreciation+temp.total3+temp.housingmoneys+temp.other4+temp.other5) as shouldwages,#当月応発工資（工资总额(纳税+免税)+只納税）
     NULL as shouldcumulative,#累計応発工資（当月含）
     IF(temp.user_id!=NULL,IF(YEAR(temp.workdate)=YEAR(now()),ROUND((temp.actualamount+temp.housingsubsidy+temp.lunchsubsidy+temp.overtimesubsidy+temp.other1+temp.traffic+temp.washingtheory+temp.other2+temp.appreciation+temp.total3+temp.housingmoneys+temp.other4+temp.other5)-
     5000*(MONTH(now())-MONTH(temp.workdate)+1)-temp.thismonthterm-temp.thismonthadditional-temp.thismonthdutyfree,2),ROUND((temp.actualamount+temp.housingsubsidy+temp.lunchsubsidy+temp.overtimesubsidy+temp.other1+temp.traffic+temp.washingtheory+temp.other2+temp.appreciation+
     temp.total3+temp.housingmoneys+temp.other4+temp.other5)-5000*MONTH(now())-temp.thismonthterm-temp.thismonthadditional-temp.thismonthdutyfree,2)),0) as shouldpaytaxes #累計应纳税所得额
     from (select base.department_id,base.USER_ID,base.workdate,base.TYPE,base.sex,base.ONLYCHILD,base.bonus,base.sociology,base.registered,base.pension,base.medical,base.accumulation,base.lastmonth,base.thismonth,
     case when base.TYPE = 2 then otherone.attendance
     when base.TYPE = 3 then otherone.vacation
     end birthrest,
     case when base.TYPE = 2 then ROUND(base.THISMONTH/21.75*(otherone.attendance),2)
     when base.TYPE = 3 then ROUND(base.THISMONTH-base.LASTMONTH/21.75*(otherone.vacation) ,2)
     when base.TYPE = 0 then induction.give
     when base.TYPE = 1 then retire.give
     end thismonthbasic,
     (IFNULL(lackattendance.LASTSHORTDEFICIENCY,0) + IFNULL(lackattendance.THISSHORTDEFICIENCY,0)) as shortillness,
     (IFNULL(lackattendance.lastchronicdeficiency,0) + IFNULL(lackattendance.thischronicdeficiency,0)) as longillness,
     lackattendance.thisdiligence as owediligence,
     IFNULL((lackattendance.give),0) as owingcontrol,
     IF(base.type = null,(base.thismonth + IFNULL(lackattendance.give,0)),(case when base.TYPE = 2 then ROUND(base.THISMONTH/21.75*otherone.attendance,2)
     when base.TYPE = 3 then ROUND(base.THISMONTH-base.LASTMONTH/21.75*otherone.vacation ,2)
     when base.TYPE = 0 then induction.give
     when base.TYPE = 1 then (retire.give) END + IFNULL((lackattendance.give),0))) as actualamount,
     IF((base.TYPE = 0 AND (base.thismonth = base.lastmonth or base.lastmonth = 0)),ROUND(base.THISMONTH/0.9*0.01,2),ROUND(base.THISMONTH*0.01,2)) as housingsubsidy,
     IF(base.user_id = null,0,ROUND(case when base.TYPE = 3 then 105-105/21.75*otherone.vacation - 105/21.75/8*(IFNULL(lackattendance.LASTSHORTDEFICIENCY,0) + IFNULL(lackattendance.THISSHORTDEFICIENCY,0)+IFNULL(lackattendance.lastchronicdeficiency,0) + IFNULL(lackattendance.thischronicdeficiency,0)+IFNULL(lackattendance.thisdiligence,0))
     WHEN base.TYPE = 2 then 105/21.75*otherone.attendance-105/21.75/8*(IFNULL(lackattendance.LASTSHORTDEFICIENCY,0) + IFNULL(lackattendance.THISSHORTDEFICIENCY,0)+IFNULL(lackattendance.lastchronicdeficiency,0) + IFNULL(lackattendance.thischronicdeficiency,0)+IFNULL(lackattendance.thisdiligence,0))
     WHEN base.TYPE = 0 then induction.lunch-105/21.75/8*(IFNULL(lackattendance.THISSHORTDEFICIENCY,0)+IFNULL(lackattendance.lastchronicdeficiency,0) + IFNULL(lackattendance.thischronicdeficiency,0)+IFNULL(lackattendance.thisdiligence,0))
     WHEN base.TYPE = 1 then retire.lunch-105/21.75/8*(IFNULL(lackattendance.THISSHORTDEFICIENCY,0)+IFNULL(lackattendance.lastchronicdeficiency,0) + IFNULL(lackattendance.thischronicdeficiency,0)+IFNULL(lackattendance.thisdiligence,0))
     ELSE 105*(168-IFNULL(lackattendance.THISSHORTDEFICIENCY,0)-IFNULL(lackattendance.lastchronicdeficiency,0)-IFNULL(lackattendance.thischronicdeficiency,0)-IFNULL(lackattendance.thisdiligence,0))/168 END,2)) as lunchsubsidy,
     IFNULL(residual.SUBSIDY,0) as overtimesubsidy,
     IF(base.TYPE = 2,otherone.other1,0) as other1,
     IF(base.user_id = null,0,ROUND(case when base.TYPE = 3 then 84-84/21.75*otherone.vacation - 84/21.75/8*(IFNULL(lackattendance.LASTSHORTDEFICIENCY,0) + IFNULL(lackattendance.THISSHORTDEFICIENCY,0)+IFNULL(lackattendance.lastchronicdeficiency,0) + IFNULL(lackattendance.thischronicdeficiency,0)+IFNULL(lackattendance.thisdiligence,0))
     WHEN base.TYPE = 2 then 84/21.75*otherone.attendance-84/21.75/8*(IFNULL(lackattendance.LASTSHORTDEFICIENCY,0) + IFNULL(lackattendance.THISSHORTDEFICIENCY,0)+IFNULL(lackattendance.lastchronicdeficiency,0) + IFNULL(lackattendance.thischronicdeficiency,0)+IFNULL(lackattendance.thisdiligence,0))
     WHEN base.TYPE = 0 then induction.traffic-84/21.75/8*(IFNULL(lackattendance.THISSHORTDEFICIENCY,0)+IFNULL(lackattendance.lastchronicdeficiency,0) + IFNULL(lackattendance.thischronicdeficiency,0)+IFNULL(lackattendance.thisdiligence,0))
     WHEN base.TYPE = 1 then retire.traffic-105/21.75/8*(IFNULL(lackattendance.THISSHORTDEFICIENCY,0)+IFNULL(lackattendance.lastchronicdeficiency,0) + IFNULL(lackattendance.thischronicdeficiency,0)+IFNULL(lackattendance.thisdiligence,0))
     ELSE 84*(168-IFNULL(lackattendance.THISSHORTDEFICIENCY,0)-IFNULL(lackattendance.lastchronicdeficiency,0)-IFNULL(lackattendance.thischronicdeficiency,0))/168 END,2)) as traffic,
     IF((base.SEX = 1 and base.THISMONTH!=0),35,0) as washingtheory,
     IFNULL(othertwo2.moneys,0) as other2,
     IFNULL(appreciation.amount,0) as appreciation,
     IF(base.THISMONTH!=0,base.heating,0) as heating,
     IF(base.onlychild = 0,5,0) as onlychildmoney,
     ROUND(IF(base.THISMONTH!=0,base.heating,0) + IF(base.onlychild = 0,5,0) ,2) as total3,
     ROUND(base.pension*0.08 ,2) as endowmentinsurance,
     ROUND(base.pension*0.08 ,2) as medicalinsurance,
     ROUND(base.pension*0.005 ,2) as unemploymentinsurance,
     (ROUND(base.pension*0.08 ,2) + ROUND(base.pension*0.08 ,2) + ROUND(base.pension*0.005 ,2)) as socialinsurance,
     ROUND(base.accumulation * 0.1,2) as accumulationfund,
     (ROUND(base.pension*0.08 ,2) + ROUND(base.pension*0.08 ,2) + ROUND(base.pension*0.005 ,2)+ ROUND(base.accumulation * 0.1,2)) as disciplinarycontrol,
     (select SUM(IFNULL(wages.thismonthterm,0)) from wages where base.USER_ID = wages.USER_ID and YEAR(wages.CREATEON) = YEAR(now())) as thismonthterm,
     IFNULL(additional.total,0) as thismonthadditional,
     (select SUM(IFNULL(wages.total3,0)) from wages where base.USER_ID = wages.USER_ID and YEAR(wages.CREATEON) = YEAR(now())) as thismonthdutyfree,
     IF(base.sociology=0,IF((ROUND(base.accumulation * 0.1,2)*2-0.12*2)>0,(ROUND(base.accumulation * 0.1,2)*2-0.12*2),0),
     (IF(ROUND(base.accumulation * 0.1,2)>0.25,(ROUND(base.accumulation * 0.1,2)-0.25),0)+IF(ROUND(base.accumulation * 0.1,2)>0.15,
     (ROUND(base.accumulation * 0.1,2)-0.15),0))) as housingmoneys,
     IFNULL(otherfour.total,0) as other4,
     IFNULL(otherfive.total,0) as other5,
     ROUND(base.pension *0.16,2)as comendowmentinsurance,
     ROUND(base.medical *0.08,2)as commedicalinsurance,
     ROUND(base.pension *0.005,2)as comunemploymentinsurance,
     ROUND(base.pension *0.004,2)as cominjuryinsurance,
     ROUND(base.pension *0.012,2)as combirthinsurance,
     ROUND(base.pension *0.16,2)as comheating,
     ROUND(base.pension *0.16,2)as comaccumulationfund,
     ROUND(base.pension *0.16,2)as total
     from base
     LEFT JOIN otherone
     on base.USER_ID = otherone.USER_ID
     and otherone.status = '0'
     and otherone.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     LEFT JOIN othertwo2
     on base.USER_ID = othertwo2.USER_ID
     and othertwo2.status = '0'
     and othertwo2.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     LEFT JOIN induction
     on base.USER_ID = induction.USER_ID
     and induction.status = '0'
     and induction.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     LEFT JOIN retire
     on base.USER_ID = retire.USER_ID
     and retire.status = '0'
     and retire.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     LEFT JOIN lackattendance
     on base.USER_ID = lackattendance.USER_ID
     and lackattendance.status = '0'
     and lackattendance.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     LEFT JOIN residual
     on base.USER_ID = residual.USER_ID
     and residual.status = '0'
     and residual.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     LEFT JOIN appreciation
     on base.USER_ID = appreciation.USER_ID
     and appreciation.status = '0'
     and appreciation.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     LEFT JOIN additional
     on base.USER_ID = additional.USER_ID
     and additional.status = '0'
     and additional.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     LEFT JOIN otherfour
     on base.USER_ID = otherfour.USER_ID
     and otherfour.status = '0'
     and otherfour.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     LEFT JOIN otherfive
     on base.USER_ID = otherfive.USER_ID
     and otherfive.status = '0'
     and otherfive.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c'
     where base.status = '0'
     and base.GIVING_ID = 'fb3ae673-df49-4319-9165-f0341ea77c0c')temp)temp1
    </select>

    <select id="lastMonthWage" resultType="java.lang.String">
       select USER_ID from wages
       where YEAR(wages.CREATEON) = #{year}
       and MONTH(wages.CREATEON) = #{month}
     </select>

    <select id="lastWages" resultType="com.nt.dao_Pfans.PFANS2000.Wages">
       select * from wages
       where YEAR(wages.CREATEON) = #{year}
       AND MONTH(wages.CREATEON) = #{month}
     </select>

    <select id="getWagesByGivingId" resultType="com.nt.dao_Pfans.PFANS2000.Wages" parameterType="string">
        SELECT
        base.BASE_ID AS BASE_ID,#base表 主键id
        base.GIVING_ID AS GIVING_ID,#giving表主键
        base.DEPARTMENT_ID AS DEPARTMENT_ID,#base表 部门id
        base.USER_ID AS USER_ID,#base表 用户名字id
        @WORKDATE := base.WORKDATE AS WORKDATE,#base表 入社日
        base.SEX AS SEX,#base表 性别  PR019001 男  PR019002 女
        @ONLYCHILD := base.ONLYCHILD AS ONLYCHILD,#base表 是否独生子女 1:是  2：不是
        @TYPE := base.TYPE AS TYPE,#base表 入/退職/産休 1入 4退職 2女産休 3男看护
        @BONUS := base.BONUS AS BONUS,#base表 奨金計上
        @SOCIOLOGY := base.SOCIOLOGY AS SOCIOLOGY,#base表 是否1999年前社会人 1是 2不是
        @REGISTERED := base.REGISTERED AS REGISTERED,#base表 是否大連戸籍    1是 2不是
        @PENSION := round(base.PENSION,2) AS PENSION,#base表 養老・失業・工傷基数
        @YANGLAOJS := round(base.YANGLAOJS,2) AS YANGLAOJS,#base表 養老基数
        @SHIYEJS := round(base.SHIYEJS,2) AS SHIYEJS,#base表 失業基数
        @GONGSHANGJS := round(base.GONGSHANGJS,2) AS GONGSHANGJS,#base表 工傷基数
	    @MEDICAL := round(base.MEDICAL,2) AS MEDICAL,#base表 医療・生育基数
	    @YILIAOJS := round(base.YILIAOJS,2) AS YILIAOJS,#base表 医療基数
	    @SHENGYUJS := round(base.SHENGYUJS,2) AS SHENGYUJS,#base表 生育基数
	    @ACCUMULATION := round(base.ACCUMULATION,2) AS ACCUMULATION,#base表 公积金基数
        round( base.LASTMONTHBASIC, 2 ) AS LASTMONTHBASIC,# base表 上个月基本工资
	    round( base.LASTMONTHDUTY, 2 ) AS LASTMONTHDUTY,# base表 上月职责工资
	    @BASETHISMONTHBASIC := round( base.THISMONTHBASIC, 2 ) AS BASETHISMONTHBASIC,#base表 本月基本工资
	    round( base.THISMONTHDUTY, 2 ) AS THISMONTHDUTY,#base表 本月职责工资
	    @LASTMONTH := round( base.LASTMONTHTOTAL, 2 ) AS LASTMONTH,# base表上个月
	    @THISMONTH := round( base.THISMONTHTOTAL, 2 ) AS THISMONTH,# base表本月
	    @RNBASESALARY := round(base.RNBASESALARY,2) AS RNBASESALARY,#RN基本工资
        @CXDAYS := round(base.ATTENDANCE,2) AS BIRTHREST,# 其他1表 産休出勤日数(看護休暇日数)
        @THISMONTHBASICBASIC :=
        CASE
        WHEN ( @TYPE &lt;=> '2' ) THEN
        round( ( @BASETHISMONTHBASIC / 21.75 * @CXDAYS ), 2)
        WHEN ( @TYPE &lt;=> '1' ) THEN
        round(base.INDUCTION_GIVE,2)
        WHEN ( @TYPE &lt;=> '4' ) THEN
        round(base.LACKATTENDANCE_GIVE,2)
        ELSE
        round(0,2)
        END AS THISMONTHBASICBASIC, #本月入/退職/産休基本工资
	    base.RTCXBASE AS THISMONTHBASIC,#本月入/退職/産休基本給
	    @SHORTDEFICIENCY := round(base.SHORTDEFICIENCY,2) AS SHORTILLNESS,#短病欠時数
	    @CHRONICDEFICIENCY := round(base.CHRONICDEFICIENCY,2) AS LONGILLNESS,#长病欠時数
	    @DILIGENCE := round(base.DILIGENCE,2) AS OWEDILIGENCE,#欠勤時数
        @LACKATTENDANCE_GIVE := base.LACKATTENDANCE_GIVE AS OWINGCONTROL,#病欠/欠勤控除
        @BASE_SJJE := (
        IF
        ( @TYPE &lt;=> '-', ROUND( @THISMONTH + @LACKATTENDANCE_GIVE, 2 ), ROUND( base.RTCXBASE + @LACKATTENDANCE_GIVE, 2 ) )
        ) AS ACTUALAMOUNT,#基本給实际金额
        @THISMONTHBASICGEI := IF(@TYPE &lt;=> '-',round((@BASETHISMONTHBASIC + @LACKATTENDANCE_GIVE),2),round((@THISMONTHBASICBASIC + @LACKATTENDANCE_GIVE),2)) as THISMONTHBASICGEI, #本月基本给
        round( @BASE_SJJE - @THISMONTHBASICGEI, 2 ) AS THISMONTHDUTYGEI,#本月职责给
        @YKBZJS := base.DIC_YKBZZS AS YKBZJS, # 一括补助基本給
        @YKBZ :=
        CASE
        WHEN ( @TYPE &lt;=> '2' ) THEN
        round( ( base.THISMONTHSUITDAYS * base.DIC_YKBZSY / 21.75 + ( @CXDAYS - base.THISMONTHSUITDAYS ) * base.DIC_YKBZZS ), 2 )
        WHEN ( @TYPE &lt;=> '1' ) THEN
        base.INDUCTION_LUNCH
        WHEN ( @TYPE &lt;=> '4' ) THEN
        round(base.RETIRE_LUNCH - @YKBZJS / 21.75 / 8 * (@SHORTDEFICIENCY + @CHRONICDEFICIENCY + @DILIGENCE),2)
        ELSE
        round(
        IF
        (
        base.LASTMONTHSUITDAYS &lt;=> 0,
        0,
        base.DIC_YKBZSY * ( base.LASTMONTHSUITDAYS * 8 - base.LASTDILIGENCETRY - base.LASTSHORTDEFICIENCYTRY - base.LASTCHRONICDEFICIENCYTRY ) / ( base.LASTMONTHSUITDAYS * 8 )
        ) +
        IF
        (
        base.LASTMONTHDAYS &lt;=> 0,
        0,
        base.DIC_YKBZZS * ( 168 - base.LASTDILIGENCEFORMAL - base.LASTSHORTDEFICIENCYFORMAL - base.LASTCHRONICDEFICIENCYFORMAL ) / 168
        ),
        2
        ) END AS YKBZ,#一括补助
        @JBBZ := (IF(@TYPE = '4',base.SUBSIDY,base.LASTTOTALY)) AS OVERTIMESUBSIDY,# 加班补助 gbb base.SUBSIDY
        @XJ1 := round( ( @BASE_SJJE + @JBBZ + @YKBZ ), 2 ) AS TOTAL1,# 小计1(基本給+补助)
        @OTHER2 := round(base.OTHERTWO_MONEYS,2) AS OTHER2,#其他2
        @AMOUNT := round(base.APPRECIATION_AMOUNT,2) AS APPRECIATION,#月度賞与
        @XJ2 := ( @OTHER2 + @AMOUNT ) AS TOTAL2,# 小计2 其他3字段画面手动录入，sql里只计算了交通补助到月度賞与的合计，需要在画面再加上其他3手动录入的数据
        @NSGZZE := round( ( @XJ1 + @XJ2 ), 2 ) AS TAXESTOTAL,#纳税工资总额(小计1+2)  小计1(基本給+补助)+小计2,画面手动添加 其他3的数据
        @CNF := ( IF ( @THISMONTH &lt;> 0, round(base.HEATING,2), round(0,2) ) ) AS HEATING,#采暖费
        @DSZNF := ( IF ( @ONLYCHILD &lt;=> '1', round(base.DIC_DSZNF,2), round(0,2) ) ) AS ONLYCHILDMONEY,#独生子女费
        @XJ3 := round( ( @CNF + @DSZNF ), 2 ) AS TOTAL3,#小计3
        @GZZE := round( ( @NSGZZE + @XJ3 ), 2 ) AS TOTALWAGES,#工资总额(纳税+免税)
        @YLBXGR := round( ( @YANGLAOJS * base.DIC_YLBXGRFDGR ), 2 ) AS ENDOWMENTINSURANCE,#养老保险
        @YILIAOBXGR := round( ( @YILIAOJS * base.DIC_YILIAOBXGRFDGR ), 2 ) AS MEDICALINSURANCE,#医疗保险
        @SYBXGR := round( ( @SHIYEJS * base.DIC_SYBXGRFDGR ), 2 ) AS UNEMPLOYMENTINSURANCE,#失业保险
        @GRSHBX := round( ( @YLBXGR + @YILIAOBXGR + @SYBXGR ), 2 ) AS SOCIALINSURANCE,#个人社会保险(専項控除)
        @GJJ := round( ( ACCUMULATION * base.DIC_GJJGRFD ), 2 ) AS ACCUMULATIONFUND,#个人住房公积金(専項控除)
        @GRHJ := round( ( @GRSHBX + @GJJ ), 2 ) AS DISCIPLINARYCONTROL,#个人社会保险费+公积金(専項控除)合计
        @ZXKCLJ := round(base.DISCIPLINARY_TOTAL + @GRHJ,2) AS THISMONTHTERM,#専項控除累計（当月まで）
        @ADDITIONAL_TOTAL := (
        IF
        ( ( isnull( base.ADDITIONAL_TOTAL ) OR ( length( trim( base.ADDITIONAL_TOTAL ) ) &lt; 1 ) ), round(0,2), round(base.ADDITIONAL_TOTAL,2) )
        ) AS THISMONTHADDITIONAL,#附加控除累計（当月まで）
        @DUTYFREE_CUMULATIVE := round(base.DUTYFREE_CUMULATIVE + @XJ3,2) AS THISMONTHDUTYFREE,#免税分累計（当月まで）
        @ACCUMUKATEDTAX_YEARTAXES := round(base.ACCUMUKATEDTAX_YEARTAXES,2) AS LASTDUTYFREE,#年間累計税金（先月まで）
        @DIC_99NQZGDWGR := round(base.DIC_ZNDLSZZZPJGZ * 3 * 0.12,2) AS `DIC_99NQZGDWGR`,
	    @DIC_99NHZGDW := round(base.DIC_ZNDLSZZZPJGZ * 3 * 0.25,2) AS `DIC_99NHZGDW`,
	    @DIC_99NHZGGR := round(base.DIC_ZNDLSZZZPJGZ * 3 * 0.15,2) AS `DIC_99NHZGGR`,
        @ZFGJJYNSJE := (
        IF
        (
        @SOCIOLOGY &lt;=> '1',
        IF
        ( @GJJ * 2 - @DIC_99NQZGDWGR * 2 > 0, round(@GJJ * 2 - @DIC_99NQZGDWGR * 2,2), round(0,2) ),
        IF
        ( @GJJ > @DIC_99NHZGDW, round(@GJJ - @DIC_99NHZGDW,2), round(0,2) ) +
        IF
        ( @GJJ > @DIC_99NHZGGR, round(@GJJ - @DIC_99NHZGGR,2), round(0,2) )
        )
        ) AS HOUSINGMONEYS,#住房公积金应纳税金额
        @OTHERFOUR_TOTAL := round(base.OTHERFOUR_TOTAL,2) AS OTHER4,#其他4公司负担社保（24元）
        @OTHERFIVE_TOTAL := round(base.OTHERFIVE_TOTAL,2) AS OTHER5,#其他5（保険：福祉）
        @DYYKGZ := round( ( @GZZE + @ZFGJJYNSJE + @OTHERFOUR_TOTAL + @OTHERFIVE_TOTAL ), 2 ) AS SHOULDWAGES,#当月応発工資（工资总额(纳税+免税)+只納税）
        @YEARSTOTAL12 := round(base.COMPREHENSIVE_YEARSTOTAL12 + @DYYKGZ,2) AS SHOULDCUMULATIVE,#累計応発工資（当月含）
        @LJYNSSDE := (
        IF
        (
        DATE_FORMAT(@WORKDATE,'%Y') - DATE_FORMAT(NOW(),'%Y') = 0,
        round(
        (
        @YEARSTOTAL12 - base.DIC_LJYNSSDECS * ( MONTH ( DATE_FORMAT( NOW( ), '%Y-%m-%d' ) ) - 1- MONTH ( DATE_FORMAT(@WORKDATE,'%Y-%m-%d') ) + 1 ) - @ZXKCLJ - @ADDITIONAL_TOTAL - @DUTYFREE_CUMULATIVE
        ),
        2
        ),
        round(
        ( @YEARSTOTAL12 - base.DIC_LJYNSSDECS * ( MONTH ( DATE_FORMAT( NOW( ), '%Y-%m-%d' ) ) - 1 ) - @ZXKCLJ - @ADDITIONAL_TOTAL - @DUTYFREE_CUMULATIVE ),
        2
        )
        )
        ) AS SHOULDPAYTAXES,#累計应纳税所得额
        @BYYKJSDS := (
        CASE

        WHEN ( @LJYNSSDE >= base.DIC_0JE AND @LJYNSSDE &lt;= base.DIC_1JE ) THEN
        (
        IF
        (
        round( ( @LJYNSSDE * base.DIC_0SL - base.DIC_0SSKC - @ACCUMUKATEDTAX_YEARTAXES ), 2 ) &lt; 0, round(0,2), round(@LJYNSSDE * base.DIC_0SL - base.DIC_0SSKC - @ACCUMUKATEDTAX_YEARTAXES ,2)) ) WHEN ( @LJYNSSDE > 36000
        AND @LJYNSSDE &lt;= base.DIC_2JE
        ) THEN
        (
        IF
        (
        round( ( @LJYNSSDE * base.DIC_1SL - base.DIC_1SSKC - @ACCUMUKATEDTAX_YEARTAXES ), 2 ) &lt; 0, round(0,2), round(@LJYNSSDE * base.DIC_1SL - base.DIC_1SSKC - @ACCUMUKATEDTAX_YEARTAXES,2) ) ) WHEN ( @LJYNSSDE > 144000
        AND @LJYNSSDE &lt;= base.DIC_3JE
        ) THEN#20%
        (
        IF
        (
        round( ( @LJYNSSDE * base.DIC_2SL - base.DIC_2SSKC - @ACCUMUKATEDTAX_YEARTAXES ), 2 ) &lt; 0, round(0,2), round(@LJYNSSDE * base.DIC_2SL - base.DIC_2SSKC - @ACCUMUKATEDTAX_YEARTAXES,2) ) ) WHEN ( @LJYNSSDE > 300000
        AND @LJYNSSDE &lt;= base.DIC_4JE
        ) THEN#25%
        (
        IF
        (
        round( ( @LJYNSSDE * base.DIC_3SL - base.DIC_3SSKC - @ACCUMUKATEDTAX_YEARTAXES ), 2 ) &lt; 0, round(0,2), round(@LJYNSSDE * base.DIC_3SL - base.DIC_3SSKC - @ACCUMUKATEDTAX_YEARTAXES,2) ) ) WHEN ( @LJYNSSDE > 420000
        AND @LJYNSSDE &lt;= base.DIC_5JE
        ) THEN#30%
        (
        IF
        (
        round( ( @LJYNSSDE * base.DIC_4SL - base.DIC_4SSKC - @ACCUMUKATEDTAX_YEARTAXES ), 2 ) &lt; 0, round(0,2), round(@LJYNSSDE * base.DIC_4SL - base.DIC_4SSKC - @ACCUMUKATEDTAX_YEARTAXES,2) ) ) WHEN ( @LJYNSSDE > 660000
        AND @LJYNSSDE &lt;= base.DIC_6JE
        ) THEN#35%
        (
        IF
        (
        round( ( @LJYNSSDE * base.DIC_5SL - base.DIC_5SSKC - @ACCUMUKATEDTAX_YEARTAXES ), 2 ) &lt; 0,
        round(0,2),
        round(@LJYNSSDE * base.DIC_5SL - base.DIC_5SSKC - @ACCUMUKATEDTAX_YEARTAXES ,2)
        )
        ) ELSE (
        IF
        (
        round( ( @LJYNSSDE * base.DIC_6SL - base.DIC_6SSKC - @ACCUMUKATEDTAX_YEARTAXES ), 2 ) &lt; 0,
        round(0,2),
        round(@LJYNSSDE * base.DIC_6SL - base.DIC_6SSKC - @ACCUMUKATEDTAX_YEARTAXES ,2)
        )
        )
        END
        ) AS THISMONTHADJUSTMENT,#本月应扣缴所得税
        round( ( @GZZE - @GRHJ - @BYYKJSDS ), 2 ) AS REALWAGES,#当月实发工资  需要在画面加其他6字段
        @YLBXHS := round( @YANGLAOJS * DIC_YLBXHSFDHS, 2 ) AS COMENDOWMENTINSURANCE,#养老保险
        @YILIAOBXHS := round( @YILIAOJS * DIC_YILIAOBXGRFDHS * 0.5, 2 ) AS COMMEDICALINSURANCE,#医疗保险gbb0.5
        @SYBXGRFDHS := round( @SHIYEJS * DIC_SYBXGRFDHS, 2 ) AS COMUNEMPLOYMENTINSURANCE,#失业保险
        @GSBXHS := round( @GONGSHANGJS * DIC_GSBXHS, 2 ) AS COMINJURYINSURANCE,#工伤保险
        @SYBXHS := round( @SHENGYUJS * DIC_SYBXHS, 2 ) AS COMBIRTHINSURANCE,#生育保险
        @NFF := ( IF ( ( @REGISTERED &lt;=> '1' AND @YANGLAOJS != 0 ), round(DIC_DLHXNFF,2), round(0,2) ) ) AS COMHEATING,#暖房费
        @ZFGJJ := round( @ACCUMULATION * DIC_GJJHSFD, 2 ) AS COMACCUMULATIONFUND,#住房公积金
        @SUMHS := round( ( @YLBXHS + @YILIAOBXHS + @SYBXGRFDHS + @GSBXHS + @SYBXHS + @NFF + @ZFGJJ ), 2 ) AS TOTAL,#总计
        @GHJFJS := round(@XJ1 + @AMOUNT,2) AS LABOURUNIONBASE,#工会经费基数gbb base.THISMONTHBASIC + base.THISMONTHDUTY + @AMOUNT
        @GHJF := round( @GHJFJS * 0.02, 2 ) AS LABOURUNIONFUNDS,#工会经费
        @GZFZFDZJ := ROUND( ( @GZZE + @OTHERFOUR_TOTAL + @OTHERFIVE_TOTAL + @SUMHS + @GHJF ), 2 ) AS COMTOTALWAGES,#工资总额(纳税+免税)+福祉+公司負担+工会経費总计
        @JSJJ := (
		IF
			(
				@BONUS = 1,
				ROUND( @RNBASESALARY * DIC_JJJSXS1 / 12, 0 ),
			round(IF
				( @BONUS = 2, @RNBASESALARY * DIC_JJJSXS2 / 12, 0 ),0)
			) - @AMOUNT
		) AS BONUSMONEY,#計上奨金
        @NJJY :=  @BASETHISMONTHBASIC * 2 * base.remaining_annual_leave_lastyear as NJJY,
	    ROUND(IF(MONTH(CURRENT_DATE) = 4, @GZFZFDZJ + @NJJY + @JSJJ ,@GZFZFDZJ + @JSJJ),2) AS TOTALBONUS #总计+計上奨金
        FROM
        baseView base
        WHERE
        base.GIVING_ID = #{givingId}
        order by base.USER_ID
    </select>

    <select id="getWagesdepartment" resultType="com.nt.dao_Pfans.PFANS2000.Wages" parameterType="string">
        select
            wages.DEPARTMENT_ID,#部门
            count(*) as user_id,#人数
            ROUND(SUM(taxestotal + total3),2) as totalwages,#工资总额
            ROUND(SUM(taxestotal),2) as taxestotal,#纳税工资总额(小计1+2)/纳税工资总额
            ROUND(SUM(total3),2) as total3, #小计3/免税工资总额
            ROUND(SUM(comendowmentinsurance+commedicalinsurance+comunemploymentinsurance+cominjuryinsurance+combirthinsurance+comheating),2) as pension, #社保（企业）(养老--暖房费)
            ROUND(SUM(comendowmentinsurance),2) as comendowmentinsurance,#养老保险/养老（企业）
            ROUND(SUM(commedicalinsurance),2) as commedicalinsurance,#医疗保险/医疗（企业）
            ROUND(SUM(comunemploymentinsurance),2) as comunemploymentinsurance,#失业保险/失业（企业）
            ROUND(SUM(cominjuryinsurance),2) as cominjuryinsurance,#工伤保险/工伤（企业）
            ROUND(SUM(combirthinsurance),2) as combirthinsurance,#生育保险/生育（企业）
            ROUND(SUM(comheating),2) as comheating,#暖房费/暖房费（企业）
            ROUND(SUM(comaccumulationfund),2) as comaccumulationfund,#公积金（企业）
            ROUND(SUM(bonusmoney),2) as bonusmoney,#計上奨金
            ROUND(SUM(appreciation),2) as appreciation,#月度奨金（纳税）
            ROUND(SUM(labourunionfunds),2) as labourunionfunds,#工会经费
            ROUND(SUM(otherfour.total),2) as other4,#其他4F/社保大病险
            ROUND(SUM(otherfive.welfaretotal),2) as other5,#其他5H/福利
            ROUND(SUM(taxestotal + total3+comendowmentinsurance+commedicalinsurance+comunemploymentinsurance+cominjuryinsurance+combirthinsurance+comheating),2) as total,#人件費总计
            ROUND(SUM(overtimesubsidy),2) as overtimesubsidy,#残業手当
            ROUND(SUM(thismonthadjustment),2) as thismonthadjustment,#应缴税金
            ROUND(SUM(socialinsurance),2) as socialinsurance,#社保（个人）
            ROUND(SUM(accumulationfund),2) as accumulationfund,#公积金（个人）
            ROUND(SUM(realwages),2) as realwages,#实发工资
            ROUND(SUM(comendowmentinsurance+commedicalinsurance+comunemploymentinsurance+cominjuryinsurance+combirthinsurance+comheating+otherfour.total+socialinsurance),2) as shouldcumulative,#社保总计
            ROUND(SUM(comaccumulationfund+accumulationfund),2) as other6,#公积金总计
            ROUND(SUM(labourunionbase),2) as labourunionbase#工会经费基数
        from wages
        left join otherfour
        on otherfour.GIVING_ID = wages.GIVING_ID
        and otherfour.USER_ID = wages.USER_ID
        left join otherfive
        on otherfive.GIVING_ID = wages.GIVING_ID
        and otherfive.USER_ID = wages.USER_ID
		where DATE_FORMAT(wages.CREATEON,'%Y-%m')  = #{dates}
		GROUP BY wages.DEPARTMENT_ID
		ORDER BY FIELD(wages.DEPARTMENT_ID, 'CTA','IED','APD','ALD','APO','LSD','ECD','DTD','OSD','SSD','SPD','ISD','SDEO','DANP','FPO','ADMN')
    </select>

    <select id="getWagecompany" resultType="com.nt.dao_Pfans.PFANS2000.Wages" parameterType="string">
        select
            wages.CREATEON,#时间
            count(*) as usercount,#人数
            ROUND(SUM(taxestotal + total3),2) as totalwages,#工资总额
            ROUND(SUM(taxestotal),2) as taxestotal,#纳税工资总额(小计1+2)/纳税工资总额
            ROUND(SUM(total3),2) as total3, #小计3/免税工资总额
            ROUND(SUM(comendowmentinsurance+commedicalinsurance+comunemploymentinsurance+cominjuryinsurance+combirthinsurance+comheating),2) as socialinsurance, #社保（企业）
            ROUND(SUM(comaccumulationfund),2) as comaccumulationfund,#公积金（企业）
            ROUND(SUM(bonusmoney),2) as bonusmoney,#計上奨金
            ROUND(SUM(appreciation),2) as appreciation,#月度奨金（纳税）
            ROUND(SUM(labourunionfunds),2) as labourunionfunds,#工会经费
            ROUND(SUM(otherfour.total),2) as other4,#其他4F/社保大病险
            ROUND(SUM(otherfive.welfaretotal),2) as other5,#其他5H/福利
            ROUND(SUM(taxestotal + total3+comendowmentinsurance+commedicalinsurance+comunemploymentinsurance+cominjuryinsurance+combirthinsurance+comheating),2) as total,#人件費总计
            ROUND(SUM(overtimesubsidy),2) as overtimesubsidy,#残業手当
            ROUND(SUM(thismonthadjustment),2) as thismonthadjustment,#应缴税金
            ROUND(SUM(realwages),2) as realwages,#实发工资
            ROUND(SUM(comendowmentinsurance+commedicalinsurance+comunemploymentinsurance+cominjuryinsurance+combirthinsurance+comheating+otherfour.total+socialinsurance),2) as totalsocialsecurity,#社保总计
            ROUND(SUM(comaccumulationfund+accumulationfund),2) as other6#公积金总计
        from wages
        left join otherfour
        on otherfour.GIVING_ID = wages.GIVING_ID
        and otherfour.USER_ID = wages.USER_ID
        left join otherfive
        on otherfive.GIVING_ID = wages.GIVING_ID
        and otherfive.USER_ID = wages.USER_ID
        GROUP BY DATE_FORMAT(wages.CREATEON,'%Y-%m')
    </select>

</mapper>
