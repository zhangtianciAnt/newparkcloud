<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_pfans.PFANS2000.mapper.PersonalCostMapper">

    <select id="selectPersonalCost" resultType="com.nt.dao_Pfans.PFANS2000.PersonalCost">
        select * from personalcost
        where (CENTERID = #{groupid} or GROUPID = #{groupid})
        and yearsantid = #{yearsantid}
    </select>

    <select id="selectPersonalCostResult" parameterType="list" resultType="com.nt.dao_Pfans.PFANS2000.PersonalCost">
        SELECT
        *
        from personalcost
        where (USERID) in
        <foreach collection="list" index="index" item="item" open="("
                 separator="," close=")">
            (#{item.userid})
        </foreach>
        and yearsantid = #{yearsantid}
    </select>
    <update id="updatePersonalCost" parameterType="com.nt.dao_Pfans.PFANS2000.PersonalCost">
        <foreach collection="uplist" index="index" item="item" separator=";">
            update personalcost
            <set>
                CHANGERANK = #{item.changerank},
                LTRANK = #{item.ltrank},
                MODIFYBY = #{tokenModel.userId},
                MODIFYON = #{tokenModel.expireDate},
                TENANTID = #{tokenModel.tenantId},
            </set>
            WHERE personalcostid = #{item.personalcostid}
        </foreach>
    </update>
    <select id="selectBirthUserid" resultType="java.lang.String">
        select user_id from abnormal
        where ERROR_TYPE = 'PR013012'
        and (status = '4' or status = '7' )
        and APPLICATION_DATE
        like CONCAT('%',#{year},'%')
    </select>
    <!--add-lyt-21/2/19-PSDCD_PFANS_20201123_XQ_017-start    -->
    <select id="getFuzzyQuery"  resultType="com.nt.dao_Pfans.PFANS2000.PersonalCost">
        SELECT * FROM personalcost
        where yearsantid = #{yearsantid}
        <if test="username!=null and username!=''">
            and USERNAME LIKE CONCAT('%',#{username},'%')
        </if>
        <if test="allotmentAnt!=null and allotmentAnt!=''">
            and ALLOTMENT LIKE CONCAT('%',#{allotmentAnt},'%')
        </if>
        <if test="group_id!=null and group_id!=''">
            AND (CENTERID LIKE CONCAT('%',#{group_id},'%') or GROUPID LIKE CONCAT('%',#{group_id},'%'))
        </if>
        <if test="rnAnt!=null and rnAnt!=''">
            AND EXRANK LIKE CONCAT('%',#{rnAnt},'%')
        </if>
    </select>
    <!--add-lyt-21/2/19-PSDCD_PFANS_20201123_XQ_017-end    -->
<!--    add-lyt-21/1/29-禅道任务648-start-->
    <select id="getPersonalCost"  resultType="com.nt.dao_Pfans.PFANS2000.PersonalCost">
        SELECT yearsantid,username,aptoju,jutoma,exrank,ltrank,overtimepay,overtimehour,newpersonaldate FROM personalcost
        WHERE yearsantid IN(SELECT yearsantid FROM personalcostyears WHERE YEARS= #{years})
        AND (CENTERID = #{groupid} or GROUPID = #{groupid})
        ORDER BY EXRANK DESC
    </select>
<!--    add-lyt-21/1/29-禅道任务648-start-->
    <select id="getDepShortList"  resultType="com.nt.dao_Pfans.PFANS2000.PersonalCostBmSum">
        SELECT DEPARTSHORT AS departshortBmSum,
            EXRANK AS exrankBmSum,
            count( userid ) AS peopleBmSum,
            round( sum( MONTHLYSALARY ) / count(userid), 2) AS monthBmSum,
            round( sum( BASICALLYANT ) / count(userid), 2) AS basicBmSum,
            round( sum( RESPONSIBILITYANT ) / count(userid), 2) AS balityBmSum,
            round( sum( TOTALSUBSIDIES ) / count(userid), 2) AS totalsubsidiesBmSum,
            round( sum( MONTHLYBONUS ) / count(userid), 2) AS monthlybonusBmSum,
            round( sum( ANNUALBONUS ) / count(userid), 2) AS annualbonusBmSum,
            round( sum( TOTALWAGES ) / count(userid), 2) AS totalwagesBmSum,
            round( sum( TRADEUNIONFUNDS ) / count(userid), 2) AS tradeunionfundsBmSum,
            round( sum( SBGSAJ ) / count(userid), 2) AS sbgsajBmSum,
            round( sum( GJJGSFDAJ ) / count(userid), 2) AS gjjgsfdajBmSum,
            round( sum( APTOJU ) / count(userid), 2) AS aptojuBmSum,
            round( sum( SBGSJM ) / count(userid), 2) AS sbgsjmBmSum,
            round( sum( GJJGSFDJM ) / count(userid), 2) AS gjjgsfdjmBmSum,
            round( sum( JUTOMA ) / count(userid), 2) AS jutomaBmSum,
            round( sum( OVERTIMEPAY ) / count(userid), 2) AS overtimepayBmSum
        FROM personalcost
        WHERE yearsantid = #{yearsantid}
        GROUP BY DEPARTSHORT,EXRANK
        ORDER BY DEPARTSHORT DESC,EXRANK DESC
    </select>
    <select id="getDepSum"  resultType="com.nt.dao_Pfans.PFANS2000.PersonalCostBmSum">
        SELECT DEPARTSHORT AS departshortBmSum,
               EXRANK AS exrankBmSum,
               count( userid ) AS peopleBmSum,
               sum( MONTHLYSALARY ) AS monthBmSum,
               sum( BASICALLYANT ) AS basicBmSum,
               sum( RESPONSIBILITYANT ) AS balityBmSum,
               sum( TOTALSUBSIDIES ) AS totalsubsidiesBmSum,
               sum( MONTHLYBONUS ) AS monthlybonusBmSum,
               sum( ANNUALBONUS ) AS annualbonusBmSum,
               sum( TOTALWAGES ) AS totalwagesBmSum,
               sum( TRADEUNIONFUNDS ) AS tradeunionfundsBmSum,
               sum( SBGSAJ ) AS sbgsajBmSum,
               sum( GJJGSFDAJ ) AS gjjgsfdajBmSum,
               sum( APTOJU ) AS aptojuBmSum,
               sum( SBGSJM ) AS sbgsjmBmSum,
               sum( GJJGSFDJM ) AS gjjgsfdjmBmSum,
               sum( JUTOMA ) AS jutomaBmSum,
               sum( OVERTIMEPAY ) AS overtimepayBmSum
        FROM personalcost
        WHERE DEPARTSHORT = #{DEPARTSHORT}
    </select>
</mapper>


