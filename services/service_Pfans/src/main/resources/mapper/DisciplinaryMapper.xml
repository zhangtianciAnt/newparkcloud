<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_pfans.PFANS2000.mapper.DisciplinaryMapper">
    <select id="getdisciplinary" parameterType="com.nt.dao_Pfans.PFANS2000.Base"
            resultType="com.nt.dao_Pfans.PFANS2000.Disciplinary">
		SELECT
            GIVING_ID,
            USER_ID,
            JOBNUMBER,
            january month1,
            february month2,
            march month3,
            april month4,
            may month5,
            june month6,
            july month7,
            august month8,
            september month9,
            october month10,
            november month11,
            december month12,
            january + february + march + april + may + june + july + august + september + october + november + december AS total
        FROM
            (
            SELECT
            base.GIVING_ID,
                base.USER_ID,
                base.JOBNUMBER,
                MAX(
                CASE
				DATE_FORMAT( wages.CREATEON, '%Y%m' )
				WHEN CONCAT( YEAR ( SYSDATE( ) ), '01' ) THEN
				IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
			END
			) january,
			MAX(
			CASE
					DATE_FORMAT( wages.CREATEON, '%Y%m' )
					WHEN CONCAT( YEAR ( SYSDATE( ) ), '02' ) THEN
					IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
				END
				) february,
				MAX(
				CASE
						DATE_FORMAT( wages.CREATEON, '%Y%m' )
						WHEN CONCAT( YEAR ( SYSDATE( ) ), '03' ) THEN
						IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
					END
					) march,
					MAX(
					CASE
							DATE_FORMAT( wages.CREATEON, '%Y%m' )
							WHEN CONCAT( YEAR ( SYSDATE( ) ), '04' ) THEN
							IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
						END
						) april,
						MAX(
						CASE
								DATE_FORMAT( wages.CREATEON, '%Y%m' )
								WHEN CONCAT( YEAR ( SYSDATE( ) ), '05' ) THEN
								IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
							END
							) may,
							MAX(
							CASE
									DATE_FORMAT( wages.CREATEON, '%Y%m' )
									WHEN CONCAT( YEAR ( SYSDATE( ) ), '06' ) THEN
									IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
								END
								) june,
								MAX(
								CASE
										DATE_FORMAT( wages.CREATEON, '%Y%m' )
										WHEN CONCAT( YEAR ( SYSDATE( ) ), '07' ) THEN
										IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
									END
									) july,
									MAX(
									CASE
											DATE_FORMAT( wages.CREATEON, '%Y%m' )
											WHEN CONCAT( YEAR ( SYSDATE( ) ), '08' ) THEN
											IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
										END
										) august,
										MAX(
										CASE
												DATE_FORMAT( wages.CREATEON, '%Y%m' )
												WHEN CONCAT( YEAR ( SYSDATE( ) ), '09' ) THEN
												IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
											END
											) september,
											MAX(
											CASE
													DATE_FORMAT( wages.CREATEON, '%Y%m' )
													WHEN CONCAT( YEAR ( SYSDATE( ) ), '10' ) THEN
													IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
												END
												) october,
												MAX(
												CASE
														DATE_FORMAT( wages.CREATEON, '%Y%m' )
														WHEN CONCAT( YEAR ( SYSDATE( ) ), '11' ) THEN
														IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
													END
													) november,
													MAX(
													CASE
															DATE_FORMAT( wages.CREATEON, '%Y%m' )
															WHEN CONCAT( YEAR ( SYSDATE( ) ), '12' ) THEN
															IFNULL( SOCIALINSURANCE, 0 )+ IFNULL( ACCUMULATIONFUND, 0 ) ELSE 0
														END
														) december
													FROM
														base
														LEFT JOIN wages ON base.USER_ID = wages.USER_ID
														AND wages.STATUS = '0'
													WHERE
														IFNULL( base.STATUS, '0' ) = '0'
													GROUP BY
													GIVING_ID,
													USER_ID,
													JOBNUMBER
	) tablewages
	</select>
</mapper>
