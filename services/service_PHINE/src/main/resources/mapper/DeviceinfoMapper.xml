<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nt.service_PHINE.mapper.DeviceinfoMapper">
    <resultMap id="BaseResultMap" type="com.nt.dao_PHINE.Deviceinfo">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="deviceid" property="deviceid" jdbcType="VARCHAR"/>
        <result column="devicetype" property="devicetype" jdbcType="VARCHAR"/>
        <result column="cabinetid" property="cabinetid" jdbcType="VARCHAR"/>
        <result column="currentuser" property="currentuser" jdbcType="VARCHAR"/>
        <result column="companyid" property="companyid" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="createon" property="createon" jdbcType="TIMESTAMP"/>
        <result column="createby" property="createby" jdbcType="VARCHAR"/>
        <result column="modifyon" property="modifyon" jdbcType="TIMESTAMP"/>
        <result column="modifyby" property="modifyby" jdbcType="VARCHAR"/>
        <result column="owner" property="owner" jdbcType="VARCHAR"/>
        <result column="tenantid" property="tenantid" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="LONGVARCHAR"/>
        <result column="cabinetslotid" property="cabinetslotid" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <select id="getDeviceListByProjectId" resultType="com.nt.dao_PHINE.Vo.DeviceListVo">
        SELECT
          a.deviceid,
          d.machineroomaddress,
          e.boardid
        FROM
          deviceinfo a
        INNER JOIN
          project2device b
        ON
          a.id = b.deviceid and b.projectid = #{projectid}
        INNER JOIN
          cabinetinfo c
        ON
          a.cabinetid = c.id
        INNER JOIN
          machineroominfo d
        ON
          c.machineroomid = d.id
        LEFT JOIN
          boardinfo e
        ON
          a.id = e.deviceid
        ORDER BY
          a.deviceid,
          d.machineroomaddress,
          e.boardid
    </select>
    <select id="getDeviceListByCompanyId" resultType="com.nt.dao_PHINE.Vo.DeviceListVo">
        SELECT
          a.id,
          a.deviceid,
          c.machineroomaddress,
          count( d.boardid ) AS boardcnt
        FROM
          deviceinfo a
		INNER JOIN
          cabinetinfo b
        ON
          a.cabinetid = b.id
        INNER JOIN
          machineroominfo c
        ON
          b.machineroomid = c.id
        LEFT JOIN
          boardinfo d
        ON
          a.id = d.deviceid
        WHERE a.companyid = #{companyid}
        AND a.id NOT IN ( SELECT deviceid FROM project2device )
        GROUP BY
          a.id,
          a.deviceid,
          c.machineroomaddress
    </select>
    <select id="getDeviceInfoList" resultType="com.nt.dao_PHINE.Vo.DeviceListVo">
        SELECT
          a.id,
          b.machineroomid,
          b.machineroomname,
          a.deviceid,
          a.devicetype,
          a.cabinetid,
          a.cabinetslotid,
          d.cabinetname cabinetname,
          a.companyid,
          IFNULL(c.devicestatus,'1') as devicestatus
        FROM
          deviceinfo a
        INNER JOIN
          cabinetinfo d
        ON
          a.cabinetid = d.id
        INNER JOIN
          machineroominfo b
        ON
          d.machineroomid = b.id
        LEFT JOIN
          devicestatus c
        ON
          c.deviceid = a.id
    </select>
    <select id="getAllDeviceStatus" resultType="com.nt.dao_PHINE.Vo.DeviceListVo">
        SELECT
          a.deviceid,
          d.machineroomaddress,
          IFNULL(e.devicestatus,'1') as devicestatus,
          f.boardid
        FROM
          deviceinfo a
        INNER JOIN
          project2device b
        ON
          a.id = b.deviceid
        INNER JOIN
          cabinetinfo c
        ON
          a.cabinetid = c.id
        INNER JOIN
          machineroominfo d
        ON
          c.machineroomid = d.id
        LEFT JOIN
          devicestatus e
        ON
          e.deviceid = a.id
        LEFT JOIN
          boardinfo f
        ON
          a.id = f.deviceid
        <where>
            <if test="companyid != '' and companyid != null">
                a.companyid = #{companyid}
            </if>
        </where>
        ORDER BY
          a.deviceid,
          f.boardid
    </select>
    <select id="getCommunicationDeviceInfo" resultType="com.nt.dao_PHINE.Vo.DeviceListVo">
        SELECT
          c.id,
          c.deviceid,
          c.currentuser
        FROM
          projectinfo a
        LEFT JOIN
          project2device b
        ON
          a.id = b.projectid
        LEFT JOIN
          deviceinfo c
        ON
          b.deviceid = c.id
        WHERE
          a.id = #{projectid}
        ORDER BY
          c.deviceid
    </select>
    <update id="updateCommunicationDeviceInfo" parameterType="com.nt.dao_PHINE.Deviceinfo">
        UPDATE deviceinfo
        SET currentuser = #{currentuser},
            status = #{status},
            modifyby = #{modifyby},
            modifyon = #{modifyon}
        WHERE id = #{id}
    </update>
    <select id="getDeviceChartInfo" resultType="com.nt.dao_PHINE.Vo.ChartDataRow">
        select
            ifnull(companyid, '未分配') as name,
            count(id) as cnt
        from
            deviceinfo
        GROUP BY
            companyid
    </select>
    <select id="getDeviceStatusChartInfo" resultType="com.nt.dao_PHINE.Vo.ChartDataRow">
        select
            '正常' as name,
            count(id)-(select count(deviceid) as cnt from devicestatus) as cnt
        from
            deviceinfo
        union all
        select
            '异常' as name,
            count(deviceid) as cnt
        from
            devicestatus
    </select>
</mapper>
