
package com.nt.service_PHINE.RouterService;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.18
 * 2020-04-17T09:26:29.202+08:00
 * Generated source version: 3.1.18
 *
 */
public final class IRouter_BasicHttpBindingIRouter_Client {

    private static final QName SERVICE_NAME = new QName("http://tempuri.org/", "RouterService");

    private IRouter_BasicHttpBindingIRouter_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = RouterService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        RouterService ss = new RouterService(wsdlURL, SERVICE_NAME);
        IRouter port = ss.getBasicHttpBindingIRouter();

        {
        System.out.println("Invoking getDeviceServiceUrl...");
        String _getDeviceServiceUrl_deviceId = "";
        String _getDeviceServiceUrl_serviceUrlVal = "";
        javax.xml.ws.Holder<String> _getDeviceServiceUrl_serviceUrl = new javax.xml.ws.Holder<String>(_getDeviceServiceUrl_serviceUrlVal);
        javax.xml.ws.Holder<Boolean> _getDeviceServiceUrl_getDeviceServiceUrlResult = new javax.xml.ws.Holder<Boolean>();
        port.getDeviceServiceUrl(_getDeviceServiceUrl_deviceId, _getDeviceServiceUrl_serviceUrl, _getDeviceServiceUrl_getDeviceServiceUrlResult);

        System.out.println("getDeviceServiceUrl._getDeviceServiceUrl_serviceUrl=" + _getDeviceServiceUrl_serviceUrl.value);
        System.out.println("getDeviceServiceUrl._getDeviceServiceUrl_getDeviceServiceUrlResult=" + _getDeviceServiceUrl_getDeviceServiceUrlResult.value);

        }
        {
        System.out.println("Invoking add...");
        Double _add_n1 = null;
        Double _add_n2 = null;
        Double _add__return = port.add(_add_n1, _add_n2);
        System.out.println("add.result=" + _add__return);


        }

        System.exit(0);
    }

}
