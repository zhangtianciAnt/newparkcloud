
package com.nt.service_PHINE.DeviceCommunication;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.18
 * 2020-02-19T14:02:25.972+08:00
 * Generated source version: 3.1.18
 *
 */
public final class IDeviceService_BasicHttpBindingIDeviceService_Client {

    private static final QName SERVICE_NAME = new QName("http://tempuri.org/", "DeviceService");

    private IDeviceService_BasicHttpBindingIDeviceService_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = DeviceService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        DeviceService ss = new DeviceService(wsdlURL, SERVICE_NAME);
        IDeviceService port = ss.getBasicHttpBindingIDeviceService();

        {
	        System.out.println("Invoking openConnection...");
	        String _openConnection_deviceId = "device_1";
	        ConnectionResult _openConnection__return = port.openConnection(_openConnection_deviceId);
	        System.out.println("openConnection.result=" + _openConnection__return);
        }
        {
	        System.out.println("Invoking closeConnection...");
	        String _closeConnection_deviceId = "device_1";
	        Boolean _closeConnection__return = port.closeConnection(_closeConnection_deviceId);
	        System.out.println("closeConnection.result=" + _closeConnection__return);
        }

        System.exit(0);
    }

}
