
package com.nt.service_PHINE.DeviceCommunication;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 3.1.18
 * 2020-02-21T05:00:18.528+08:00
 * Generated source version: 3.1.18
 * 
 */
public final class IDeviceService_BasicHttpBindingIDeviceService_Client {

    private static final QName SERVICE_NAME = new QName("http://tempuri.org/", "DeviceService");

    private IDeviceService_BasicHttpBindingIDeviceService_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = DeviceService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        DeviceService ss = new DeviceService(wsdlURL, SERVICE_NAME);
        IDeviceService port = ss.getBasicHttpBindingIDeviceService();  
        
        {
        System.out.println("Invoking offlineDevice...");
        String _offlineDevice_deviceId = "";
        Boolean _offlineDevice__return = port.offlineDevice(_offlineDevice_deviceId);
        System.out.println("offlineDevice.result=" + _offlineDevice__return);


        }
        {
        System.out.println("Invoking regWrite...");
        String _regWrite_deviceId = "";
        Long _regWrite_fpgaId = null;
        Long _regWrite_regAddr = null;
        Long _regWrite_regData = null;
        Boolean _regWrite__return = port.regWrite(_regWrite_deviceId, _regWrite_fpgaId, _regWrite_regAddr, _regWrite_regData);
        System.out.println("regWrite.result=" + _regWrite__return);


        }
        {
        System.out.println("Invoking setFmcVoltageByFile...");
        String _setFmcVoltageByFile_deviceId = "";
        Long _setFmcVoltageByFile_fpgaId = null;
        Long _setFmcVoltageByFile_fmcId = null;
        String _setFmcVoltageByFile_configFilePath = "";
        Boolean _setFmcVoltageByFile__return = port.setFmcVoltageByFile(_setFmcVoltageByFile_deviceId, _setFmcVoltageByFile_fpgaId, _setFmcVoltageByFile_fmcId, _setFmcVoltageByFile_configFilePath);
        System.out.println("setFmcVoltageByFile.result=" + _setFmcVoltageByFile__return);


        }
        {
        System.out.println("Invoking getFpgaConfigStatus...");
        String _getFpgaConfigStatus_deviceId = "";
        Long _getFpgaConfigStatus_fpgaId = null;
        ConfigStatus _getFpgaConfigStatus_configStatusVal = null;
        javax.xml.ws.Holder<ConfigStatus> _getFpgaConfigStatus_configStatus = new javax.xml.ws.Holder<ConfigStatus>(_getFpgaConfigStatus_configStatusVal);
        javax.xml.ws.Holder<Boolean> _getFpgaConfigStatus_getFpgaConfigStatusResult = new javax.xml.ws.Holder<Boolean>();
        port.getFpgaConfigStatus(_getFpgaConfigStatus_deviceId, _getFpgaConfigStatus_fpgaId, _getFpgaConfigStatus_configStatus, _getFpgaConfigStatus_getFpgaConfigStatusResult);

        System.out.println("getFpgaConfigStatus._getFpgaConfigStatus_configStatus=" + _getFpgaConfigStatus_configStatus.value);
        System.out.println("getFpgaConfigStatus._getFpgaConfigStatus_getFpgaConfigStatusResult=" + _getFpgaConfigStatus_getFpgaConfigStatusResult.value);

        }
        {
        System.out.println("Invoking getCurrentConnStatus...");
        ArrayOfDeviceConnState _getCurrentConnStatus_deviceConnStatesVal = null;
        javax.xml.ws.Holder<ArrayOfDeviceConnState> _getCurrentConnStatus_deviceConnStates = new javax.xml.ws.Holder<ArrayOfDeviceConnState>(_getCurrentConnStatus_deviceConnStatesVal);
        javax.xml.ws.Holder<Boolean> _getCurrentConnStatus_getCurrentConnStatusResult = new javax.xml.ws.Holder<Boolean>();
        port.getCurrentConnStatus(_getCurrentConnStatus_deviceConnStates, _getCurrentConnStatus_getCurrentConnStatusResult);

        System.out.println("getCurrentConnStatus._getCurrentConnStatus_deviceConnStates=" + _getCurrentConnStatus_deviceConnStates.value);
        System.out.println("getCurrentConnStatus._getCurrentConnStatus_getCurrentConnStatusResult=" + _getCurrentConnStatus_getCurrentConnStatusResult.value);

        }
        {
        System.out.println("Invoking startConfigFpgaByFile...");
        String _startConfigFpgaByFile_deviceId = "";
        Long _startConfigFpgaByFile_fpgaId = null;
        String _startConfigFpgaByFile_configFilePath = "";
        Boolean _startConfigFpgaByFile__return = port.startConfigFpgaByFile(_startConfigFpgaByFile_deviceId, _startConfigFpgaByFile_fpgaId, _startConfigFpgaByFile_configFilePath);
        System.out.println("startConfigFpgaByFile.result=" + _startConfigFpgaByFile__return);


        }
        {
        System.out.println("Invoking openConnection...");
        String _openConnection_deviceId = "";
        ConnectionResult _openConnection__return = port.openConnection(_openConnection_deviceId);
        System.out.println("openConnection.result=" + _openConnection__return);


        }
        {
        System.out.println("Invoking closeConnection...");
        String _closeConnection_deviceId = "";
        Boolean _closeConnection__return = port.closeConnection(_closeConnection_deviceId);
        System.out.println("closeConnection.result=" + _closeConnection__return);


        }
        {
        System.out.println("Invoking getFmcVoltage...");
        FmcVoltageObject _getFmcVoltage_fmcVoltageObjectVal = null;
        javax.xml.ws.Holder<FmcVoltageObject> _getFmcVoltage_fmcVoltageObject = new javax.xml.ws.Holder<FmcVoltageObject>(_getFmcVoltage_fmcVoltageObjectVal);
        javax.xml.ws.Holder<Boolean> _getFmcVoltage_getFmcVoltageResult = new javax.xml.ws.Holder<Boolean>();
        port.getFmcVoltage(_getFmcVoltage_fmcVoltageObject, _getFmcVoltage_getFmcVoltageResult);

        System.out.println("getFmcVoltage._getFmcVoltage_fmcVoltageObject=" + _getFmcVoltage_fmcVoltageObject.value);
        System.out.println("getFmcVoltage._getFmcVoltage_getFmcVoltageResult=" + _getFmcVoltage_getFmcVoltageResult.value);

        }
        {
        System.out.println("Invoking setPllClockByFile...");
        String _setPllClockByFile_deviceId = "";
        Long _setPllClockByFile_fpgaId = null;
        Long _setPllClockByFile_pllId = null;
        String _setPllClockByFile_configFilePath = "";
        Boolean _setPllClockByFile__return = port.setPllClockByFile(_setPllClockByFile_deviceId, _setPllClockByFile_fpgaId, _setPllClockByFile_pllId, _setPllClockByFile_configFilePath);
        System.out.println("setPllClockByFile.result=" + _setPllClockByFile__return);


        }
        {
        System.out.println("Invoking onlineDevice...");
        String _onlineDevice_deviceId = "";
        Boolean _onlineDevice__return = port.onlineDevice(_onlineDevice_deviceId);
        System.out.println("onlineDevice.result=" + _onlineDevice__return);


        }
        {
        System.out.println("Invoking getPllClock...");
        PllClockObject _getPllClock_pllClockObjectVal = null;
        javax.xml.ws.Holder<PllClockObject> _getPllClock_pllClockObject = new javax.xml.ws.Holder<PllClockObject>(_getPllClock_pllClockObjectVal);
        javax.xml.ws.Holder<Boolean> _getPllClock_getPllClockResult = new javax.xml.ws.Holder<Boolean>();
        port.getPllClock(_getPllClock_pllClockObject, _getPllClock_getPllClockResult);

        System.out.println("getPllClock._getPllClock_pllClockObject=" + _getPllClock_pllClockObject.value);
        System.out.println("getPllClock._getPllClock_getPllClockResult=" + _getPllClock_getPllClockResult.value);

        }
        {
        System.out.println("Invoking getFpgaConfigProgress...");
        String _getFpgaConfigProgress_deviceId = "";
        Long _getFpgaConfigProgress_fpgaId = null;
        Long _getFpgaConfigProgress_progressVal = null;
        javax.xml.ws.Holder<Long> _getFpgaConfigProgress_progress = new javax.xml.ws.Holder<Long>(_getFpgaConfigProgress_progressVal);
        javax.xml.ws.Holder<Boolean> _getFpgaConfigProgress_getFpgaConfigProgressResult = new javax.xml.ws.Holder<Boolean>();
        port.getFpgaConfigProgress(_getFpgaConfigProgress_deviceId, _getFpgaConfigProgress_fpgaId, _getFpgaConfigProgress_progress, _getFpgaConfigProgress_getFpgaConfigProgressResult);

        System.out.println("getFpgaConfigProgress._getFpgaConfigProgress_progress=" + _getFpgaConfigProgress_progress.value);
        System.out.println("getFpgaConfigProgress._getFpgaConfigProgress_getFpgaConfigProgressResult=" + _getFpgaConfigProgress_getFpgaConfigProgressResult.value);

        }
        {
        System.out.println("Invoking regRead...");
        String _regRead_deviceId = "";
        Long _regRead_fpgaId = null;
        Long _regRead_regAddr = null;
        Long _regRead_regDataVal = null;
        javax.xml.ws.Holder<Long> _regRead_regData = new javax.xml.ws.Holder<Long>(_regRead_regDataVal);
        javax.xml.ws.Holder<Boolean> _regRead_regReadResult = new javax.xml.ws.Holder<Boolean>();
        port.regRead(_regRead_deviceId, _regRead_fpgaId, _regRead_regAddr, _regRead_regData, _regRead_regReadResult);

        System.out.println("regRead._regRead_regData=" + _regRead_regData.value);
        System.out.println("regRead._regRead_regReadResult=" + _regRead_regReadResult.value);

        }
        {
        System.out.println("Invoking reConfigFpga...");
        String _reConfigFpga_deviceId = "";
        Long _reConfigFpga_fpgaId = null;
        Boolean _reConfigFpga__return = port.reConfigFpga(_reConfigFpga_deviceId, _reConfigFpga_fpgaId);
        System.out.println("reConfigFpga.result=" + _reConfigFpga__return);


        }
        {
        System.out.println("Invoking startConfigFpga...");
        FpgaConfigObject _startConfigFpga_fpgaConfigObject = null;
        Boolean _startConfigFpga__return = port.startConfigFpga(_startConfigFpga_fpgaConfigObject);
        System.out.println("startConfigFpga.result=" + _startConfigFpga__return);


        }
        {
        System.out.println("Invoking setPllClock...");
        PllClockObject _setPllClock_pllClockObject = null;
        Boolean _setPllClock__return = port.setPllClock(_setPllClock_pllClockObject);
        System.out.println("setPllClock.result=" + _setPllClock__return);


        }
        {
        System.out.println("Invoking setFmcVoltage...");
        FmcVoltageObject _setFmcVoltage_fmcVoltageObject = null;
        Boolean _setFmcVoltage__return = port.setFmcVoltage(_setFmcVoltage_fmcVoltageObject);
        System.out.println("setFmcVoltage.result=" + _setFmcVoltage__return);


        }

        System.exit(0);
    }

}
